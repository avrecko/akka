// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RemoteProtocol.proto

package akka.remote.protocol;

public final class RemoteProtocol {
  private RemoteProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(akka.remote.protocol.RemoteProtocol.bcreq);
    registry.add(akka.remote.protocol.RemoteProtocol.bcresp);
  }
  public enum ByteCodeResponseCode
      implements com.google.protobuf.ProtocolMessageEnum {
    OK(0, 1),
    ENDPOINT_NOT_AVAILABLE(1, 2),
    BYTE_CODE_NOT_AVAILABLE(2, 3),
    ;
    
    public static final int OK_VALUE = 1;
    public static final int ENDPOINT_NOT_AVAILABLE_VALUE = 2;
    public static final int BYTE_CODE_NOT_AVAILABLE_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static ByteCodeResponseCode valueOf(int value) {
      switch (value) {
        case 1: return OK;
        case 2: return ENDPOINT_NOT_AVAILABLE;
        case 3: return BYTE_CODE_NOT_AVAILABLE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ByteCodeResponseCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ByteCodeResponseCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ByteCodeResponseCode>() {
            public ByteCodeResponseCode findValueByNumber(int number) {
              return ByteCodeResponseCode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final ByteCodeResponseCode[] VALUES = {
      OK, ENDPOINT_NOT_AVAILABLE, BYTE_CODE_NOT_AVAILABLE, 
    };
    
    public static ByteCodeResponseCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ByteCodeResponseCode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ByteCodeResponseCode)
  }
  
  public enum CommandType
      implements com.google.protobuf.ProtocolMessageEnum {
    SHUTDOWN(0, 1),
    BYTE_CODE_REQUEST(1, 2),
    BYTE_CODE_RESPONSE(2, 3),
    ;
    
    public static final int SHUTDOWN_VALUE = 1;
    public static final int BYTE_CODE_REQUEST_VALUE = 2;
    public static final int BYTE_CODE_RESPONSE_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static CommandType valueOf(int value) {
      switch (value) {
        case 1: return SHUTDOWN;
        case 2: return BYTE_CODE_REQUEST;
        case 3: return BYTE_CODE_RESPONSE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
            public CommandType findValueByNumber(int number) {
              return CommandType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final CommandType[] VALUES = {
      SHUTDOWN, BYTE_CODE_REQUEST, BYTE_CODE_RESPONSE, 
    };
    
    public static CommandType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CommandType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:CommandType)
  }
  
  public enum ActorType
      implements com.google.protobuf.ProtocolMessageEnum {
    SCALA_ACTOR(0, 1),
    JAVA_ACTOR(1, 2),
    TYPED_ACTOR(2, 3),
    ;
    
    public static final int SCALA_ACTOR_VALUE = 1;
    public static final int JAVA_ACTOR_VALUE = 2;
    public static final int TYPED_ACTOR_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static ActorType valueOf(int value) {
      switch (value) {
        case 1: return SCALA_ACTOR;
        case 2: return JAVA_ACTOR;
        case 3: return TYPED_ACTOR;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ActorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ActorType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActorType>() {
            public ActorType findValueByNumber(int number) {
              return ActorType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final ActorType[] VALUES = {
      SCALA_ACTOR, JAVA_ACTOR, TYPED_ACTOR, 
    };
    
    public static ActorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ActorType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ActorType)
  }
  
  public enum SerializationSchemeType
      implements com.google.protobuf.ProtocolMessageEnum {
    JAVA(0, 1),
    SBINARY(1, 2),
    SCALA_JSON(2, 3),
    JAVA_JSON(3, 4),
    PROTOBUF(4, 5),
    ;
    
    public static final int JAVA_VALUE = 1;
    public static final int SBINARY_VALUE = 2;
    public static final int SCALA_JSON_VALUE = 3;
    public static final int JAVA_JSON_VALUE = 4;
    public static final int PROTOBUF_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static SerializationSchemeType valueOf(int value) {
      switch (value) {
        case 1: return JAVA;
        case 2: return SBINARY;
        case 3: return SCALA_JSON;
        case 4: return JAVA_JSON;
        case 5: return PROTOBUF;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>() {
            public SerializationSchemeType findValueByNumber(int number) {
              return SerializationSchemeType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final SerializationSchemeType[] VALUES = {
      JAVA, SBINARY, SCALA_JSON, JAVA_JSON, PROTOBUF, 
    };
    
    public static SerializationSchemeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SerializationSchemeType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:SerializationSchemeType)
  }
  
  public enum LifeCycleType
      implements com.google.protobuf.ProtocolMessageEnum {
    PERMANENT(0, 1),
    TEMPORARY(1, 2),
    ;
    
    public static final int PERMANENT_VALUE = 1;
    public static final int TEMPORARY_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static LifeCycleType valueOf(int value) {
      switch (value) {
        case 1: return PERMANENT;
        case 2: return TEMPORARY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>() {
            public LifeCycleType findValueByNumber(int number) {
              return LifeCycleType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.getDescriptor().getEnumTypes().get(4);
    }
    
    private static final LifeCycleType[] VALUES = {
      PERMANENT, TEMPORARY, 
    };
    
    public static LifeCycleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private LifeCycleType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:LifeCycleType)
  }
  
  public interface AkkaRemoteProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .RemoteMessageProtocol message = 1;
    boolean hasMessage();
    akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getMessage();
    akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessageOrBuilder();
    
    // optional .RemoteControlProtocol instruction = 2;
    boolean hasInstruction();
    akka.remote.protocol.RemoteProtocol.RemoteControlProtocol getInstruction();
    akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder getInstructionOrBuilder();
    
    // repeated .MetadataEntryProtocol metadata = 3;
    java.util.List<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol> 
        getMetadataList();
    akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol getMetadata(int index);
    int getMetadataCount();
    java.util.List<? extends akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder> 
        getMetadataOrBuilderList();
    akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder getMetadataOrBuilder(
        int index);
  }
  public static final class AkkaRemoteProtocol extends
      com.google.protobuf.GeneratedMessage
      implements AkkaRemoteProtocolOrBuilder {
    // Use AkkaRemoteProtocol.newBuilder() to construct.
    private AkkaRemoteProtocol(Builder builder) {
      super(builder);
    }
    private AkkaRemoteProtocol(boolean noInit) {}
    
    private static final AkkaRemoteProtocol defaultInstance;
    public static AkkaRemoteProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public AkkaRemoteProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_AkkaRemoteProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_AkkaRemoteProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .RemoteMessageProtocol message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getMessage() {
      return message_;
    }
    public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessageOrBuilder() {
      return message_;
    }
    
    // optional .RemoteControlProtocol instruction = 2;
    public static final int INSTRUCTION_FIELD_NUMBER = 2;
    private akka.remote.protocol.RemoteProtocol.RemoteControlProtocol instruction_;
    public boolean hasInstruction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public akka.remote.protocol.RemoteProtocol.RemoteControlProtocol getInstruction() {
      return instruction_;
    }
    public akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder getInstructionOrBuilder() {
      return instruction_;
    }
    
    // repeated .MetadataEntryProtocol metadata = 3;
    public static final int METADATA_FIELD_NUMBER = 3;
    private java.util.List<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol> metadata_;
    public java.util.List<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol> getMetadataList() {
      return metadata_;
    }
    public java.util.List<? extends akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder> 
        getMetadataOrBuilderList() {
      return metadata_;
    }
    public int getMetadataCount() {
      return metadata_.size();
    }
    public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol getMetadata(int index) {
      return metadata_.get(index);
    }
    public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder getMetadataOrBuilder(
        int index) {
      return metadata_.get(index);
    }
    
    private void initFields() {
      message_ = akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
      instruction_ = akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
      metadata_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasMessage()) {
        if (!getMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInstruction()) {
        if (!getInstruction().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMetadataCount(); i++) {
        if (!getMetadata(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, message_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, instruction_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        output.writeMessage(3, metadata_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, message_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, instruction_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, metadata_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_AkkaRemoteProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_AkkaRemoteProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getInstructionFieldBuilder();
          getMetadataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (messageBuilder_ == null) {
          message_ = akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
        } else {
          messageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (instructionBuilder_ == null) {
          instruction_ = akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
        } else {
          instructionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (metadataBuilder_ == null) {
          metadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          metadataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol build() {
        akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol result = new akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (messageBuilder_ == null) {
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (instructionBuilder_ == null) {
          result.instruction_ = instruction_;
        } else {
          result.instruction_ = instructionBuilder_.build();
        }
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            metadata_ = java.util.Collections.unmodifiableList(metadata_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasInstruction()) {
          mergeInstruction(other.getInstruction());
        }
        if (metadataBuilder_ == null) {
          if (!other.metadata_.isEmpty()) {
            if (metadata_.isEmpty()) {
              metadata_ = other.metadata_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMetadataIsMutable();
              metadata_.addAll(other.metadata_);
            }
            onChanged();
          }
        } else {
          if (!other.metadata_.isEmpty()) {
            if (metadataBuilder_.isEmpty()) {
              metadataBuilder_.dispose();
              metadataBuilder_ = null;
              metadata_ = other.metadata_;
              bitField0_ = (bitField0_ & ~0x00000004);
              metadataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetadataFieldBuilder() : null;
            } else {
              metadataBuilder_.addAllMessages(other.metadata_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasMessage()) {
          if (!getMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasInstruction()) {
          if (!getInstruction().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMetadataCount(); i++) {
          if (!getMetadata(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder();
              if (hasMessage()) {
                subBuilder.mergeFrom(getMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMessage(subBuilder.buildPartial());
              break;
            }
            case 18: {
              akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.newBuilder();
              if (hasInstruction()) {
                subBuilder.mergeFrom(getInstruction());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInstruction(subBuilder.buildPartial());
              break;
            }
            case 26: {
              akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMetadata(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .RemoteMessageProtocol message = 1;
      private akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol message_ = akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> messageBuilder_;
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getMessage() {
        if (messageBuilder_ == null) {
          return message_;
        } else {
          return messageBuilder_.getMessage();
        }
      }
      public Builder setMessage(akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          messageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setMessage(
          akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        if (messageBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          messageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeMessage(akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              message_ != akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance()) {
            message_ =
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder(message_).mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          messageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder getMessageBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMessageFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessageOrBuilder() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilder();
        } else {
          return message_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder>(
                  message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }
      
      // optional .RemoteControlProtocol instruction = 2;
      private akka.remote.protocol.RemoteProtocol.RemoteControlProtocol instruction_ = akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteControlProtocol, akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder> instructionBuilder_;
      public boolean hasInstruction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public akka.remote.protocol.RemoteProtocol.RemoteControlProtocol getInstruction() {
        if (instructionBuilder_ == null) {
          return instruction_;
        } else {
          return instructionBuilder_.getMessage();
        }
      }
      public Builder setInstruction(akka.remote.protocol.RemoteProtocol.RemoteControlProtocol value) {
        if (instructionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          instruction_ = value;
          onChanged();
        } else {
          instructionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setInstruction(
          akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder builderForValue) {
        if (instructionBuilder_ == null) {
          instruction_ = builderForValue.build();
          onChanged();
        } else {
          instructionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeInstruction(akka.remote.protocol.RemoteProtocol.RemoteControlProtocol value) {
        if (instructionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              instruction_ != akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance()) {
            instruction_ =
              akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.newBuilder(instruction_).mergeFrom(value).buildPartial();
          } else {
            instruction_ = value;
          }
          onChanged();
        } else {
          instructionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearInstruction() {
        if (instructionBuilder_ == null) {
          instruction_ = akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
          onChanged();
        } else {
          instructionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder getInstructionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getInstructionFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder getInstructionOrBuilder() {
        if (instructionBuilder_ != null) {
          return instructionBuilder_.getMessageOrBuilder();
        } else {
          return instruction_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteControlProtocol, akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder> 
          getInstructionFieldBuilder() {
        if (instructionBuilder_ == null) {
          instructionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.RemoteControlProtocol, akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder>(
                  instruction_,
                  getParentForChildren(),
                  isClean());
          instruction_ = null;
        }
        return instructionBuilder_;
      }
      
      // repeated .MetadataEntryProtocol metadata = 3;
      private java.util.List<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol> metadata_ =
        java.util.Collections.emptyList();
      private void ensureMetadataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          metadata_ = new java.util.ArrayList<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol>(metadata_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder> metadataBuilder_;
      
      public java.util.List<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol> getMetadataList() {
        if (metadataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metadata_);
        } else {
          return metadataBuilder_.getMessageList();
        }
      }
      public int getMetadataCount() {
        if (metadataBuilder_ == null) {
          return metadata_.size();
        } else {
          return metadataBuilder_.getCount();
        }
      }
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol getMetadata(int index) {
        if (metadataBuilder_ == null) {
          return metadata_.get(index);
        } else {
          return metadataBuilder_.getMessage(index);
        }
      }
      public Builder setMetadata(
          int index, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.set(index, value);
          onChanged();
        } else {
          metadataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMetadata(
          int index, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.set(index, builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMetadata(akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.add(value);
          onChanged();
        } else {
          metadataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMetadata(
          int index, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.add(index, value);
          onChanged();
        } else {
          metadataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMetadata(
          akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.add(builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMetadata(
          int index, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.add(index, builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMetadata(
          java.lang.Iterable<? extends akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol> values) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          super.addAll(values, metadata_);
          onChanged();
        } else {
          metadataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        return this;
      }
      public Builder removeMetadata(int index) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.remove(index);
          onChanged();
        } else {
          metadataBuilder_.remove(index);
        }
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder getMetadataBuilder(
          int index) {
        return getMetadataFieldBuilder().getBuilder(index);
      }
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder getMetadataOrBuilder(
          int index) {
        if (metadataBuilder_ == null) {
          return metadata_.get(index);  } else {
          return metadataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder> 
           getMetadataOrBuilderList() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metadata_);
        }
      }
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder addMetadataBuilder() {
        return getMetadataFieldBuilder().addBuilder(
            akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.getDefaultInstance());
      }
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder addMetadataBuilder(
          int index) {
        return getMetadataFieldBuilder().addBuilder(
            index, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.getDefaultInstance());
      }
      public java.util.List<akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder> 
           getMetadataBuilderList() {
        return getMetadataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder, akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder>(
                  metadata_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:AkkaRemoteProtocol)
    }
    
    static {
      defaultInstance = new AkkaRemoteProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AkkaRemoteProtocol)
  }
  
  public interface RemoteMessageProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .UuidProtocol uuid = 1;
    boolean hasUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder();
    
    // required .ActorInfoProtocol actorInfo = 2;
    boolean hasActorInfo();
    akka.remote.protocol.RemoteProtocol.ActorInfoProtocol getActorInfo();
    akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder getActorInfoOrBuilder();
    
    // required bool oneWay = 3;
    boolean hasOneWay();
    boolean getOneWay();
    
    // optional .MessageProtocol message = 4;
    boolean hasMessage();
    akka.remote.protocol.RemoteProtocol.MessageProtocol getMessage();
    akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder getMessageOrBuilder();
    
    // optional .ExceptionProtocol exception = 5;
    boolean hasException();
    akka.remote.protocol.RemoteProtocol.ExceptionProtocol getException();
    akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder getExceptionOrBuilder();
    
    // optional .UuidProtocol supervisorUuid = 6;
    boolean hasSupervisorUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getSupervisorUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getSupervisorUuidOrBuilder();
    
    // optional .RemoteActorRefProtocol sender = 7;
    boolean hasSender();
    akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getSender();
    akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getSenderOrBuilder();
    
    // optional string cookie = 8;
    boolean hasCookie();
    String getCookie();
  }
  public static final class RemoteMessageProtocol extends
      com.google.protobuf.GeneratedMessage
      implements RemoteMessageProtocolOrBuilder {
    // Use RemoteMessageProtocol.newBuilder() to construct.
    private RemoteMessageProtocol(Builder builder) {
      super(builder);
    }
    private RemoteMessageProtocol(boolean noInit) {}
    
    private static final RemoteMessageProtocol defaultInstance;
    public static RemoteMessageProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteMessageProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteMessageProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteMessageProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .UuidProtocol uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol uuid_;
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid() {
      return uuid_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder() {
      return uuid_;
    }
    
    // required .ActorInfoProtocol actorInfo = 2;
    public static final int ACTORINFO_FIELD_NUMBER = 2;
    private akka.remote.protocol.RemoteProtocol.ActorInfoProtocol actorInfo_;
    public boolean hasActorInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public akka.remote.protocol.RemoteProtocol.ActorInfoProtocol getActorInfo() {
      return actorInfo_;
    }
    public akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder getActorInfoOrBuilder() {
      return actorInfo_;
    }
    
    // required bool oneWay = 3;
    public static final int ONEWAY_FIELD_NUMBER = 3;
    private boolean oneWay_;
    public boolean hasOneWay() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getOneWay() {
      return oneWay_;
    }
    
    // optional .MessageProtocol message = 4;
    public static final int MESSAGE_FIELD_NUMBER = 4;
    private akka.remote.protocol.RemoteProtocol.MessageProtocol message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.remote.protocol.RemoteProtocol.MessageProtocol getMessage() {
      return message_;
    }
    public akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder getMessageOrBuilder() {
      return message_;
    }
    
    // optional .ExceptionProtocol exception = 5;
    public static final int EXCEPTION_FIELD_NUMBER = 5;
    private akka.remote.protocol.RemoteProtocol.ExceptionProtocol exception_;
    public boolean hasException() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public akka.remote.protocol.RemoteProtocol.ExceptionProtocol getException() {
      return exception_;
    }
    public akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder getExceptionOrBuilder() {
      return exception_;
    }
    
    // optional .UuidProtocol supervisorUuid = 6;
    public static final int SUPERVISORUUID_FIELD_NUMBER = 6;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol supervisorUuid_;
    public boolean hasSupervisorUuid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getSupervisorUuid() {
      return supervisorUuid_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getSupervisorUuidOrBuilder() {
      return supervisorUuid_;
    }
    
    // optional .RemoteActorRefProtocol sender = 7;
    public static final int SENDER_FIELD_NUMBER = 7;
    private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol sender_;
    public boolean hasSender() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getSender() {
      return sender_;
    }
    public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getSenderOrBuilder() {
      return sender_;
    }
    
    // optional string cookie = 8;
    public static final int COOKIE_FIELD_NUMBER = 8;
    private java.lang.Object cookie_;
    public boolean hasCookie() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getCookie() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cookie_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCookieBytes() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cookie_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      actorInfo_ = akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
      oneWay_ = false;
      message_ = akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
      exception_ = akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
      supervisorUuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      sender_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      cookie_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOneWay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getUuid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActorInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMessage()) {
        if (!getMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasException()) {
        if (!getException().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSupervisorUuid()) {
        if (!getSupervisorUuid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSender()) {
        if (!getSender().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, actorInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, oneWay_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, message_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, exception_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, supervisorUuid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, sender_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getCookieBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, actorInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, oneWay_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, message_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, exception_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, supervisorUuid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, sender_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCookieBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteMessageProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteMessageProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUuidFieldBuilder();
          getActorInfoFieldBuilder();
          getMessageFieldBuilder();
          getExceptionFieldBuilder();
          getSupervisorUuidFieldBuilder();
          getSenderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (uuidBuilder_ == null) {
          uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          uuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (actorInfoBuilder_ == null) {
          actorInfo_ = akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
        } else {
          actorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        oneWay_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (messageBuilder_ == null) {
          message_ = akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
        } else {
          messageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (exceptionBuilder_ == null) {
          exception_ = akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
        } else {
          exceptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (supervisorUuidBuilder_ == null) {
          supervisorUuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          supervisorUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (senderBuilder_ == null) {
          sender_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        } else {
          senderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        cookie_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol build() {
        akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol result = new akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (uuidBuilder_ == null) {
          result.uuid_ = uuid_;
        } else {
          result.uuid_ = uuidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (actorInfoBuilder_ == null) {
          result.actorInfo_ = actorInfo_;
        } else {
          result.actorInfo_ = actorInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oneWay_ = oneWay_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (messageBuilder_ == null) {
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (exceptionBuilder_ == null) {
          result.exception_ = exception_;
        } else {
          result.exception_ = exceptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (supervisorUuidBuilder_ == null) {
          result.supervisorUuid_ = supervisorUuid_;
        } else {
          result.supervisorUuid_ = supervisorUuidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (senderBuilder_ == null) {
          result.sender_ = sender_;
        } else {
          result.sender_ = senderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.cookie_ = cookie_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          mergeUuid(other.getUuid());
        }
        if (other.hasActorInfo()) {
          mergeActorInfo(other.getActorInfo());
        }
        if (other.hasOneWay()) {
          setOneWay(other.getOneWay());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasException()) {
          mergeException(other.getException());
        }
        if (other.hasSupervisorUuid()) {
          mergeSupervisorUuid(other.getSupervisorUuid());
        }
        if (other.hasSender()) {
          mergeSender(other.getSender());
        }
        if (other.hasCookie()) {
          setCookie(other.getCookie());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasActorInfo()) {
          
          return false;
        }
        if (!hasOneWay()) {
          
          return false;
        }
        if (!getUuid().isInitialized()) {
          
          return false;
        }
        if (!getActorInfo().isInitialized()) {
          
          return false;
        }
        if (hasMessage()) {
          if (!getMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasException()) {
          if (!getException().isInitialized()) {
            
            return false;
          }
        }
        if (hasSupervisorUuid()) {
          if (!getSupervisorUuid().isInitialized()) {
            
            return false;
          }
        }
        if (hasSender()) {
          if (!getSender().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasUuid()) {
                subBuilder.mergeFrom(getUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuid(subBuilder.buildPartial());
              break;
            }
            case 18: {
              akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.newBuilder();
              if (hasActorInfo()) {
                subBuilder.mergeFrom(getActorInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setActorInfo(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oneWay_ = input.readBool();
              break;
            }
            case 34: {
              akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.MessageProtocol.newBuilder();
              if (hasMessage()) {
                subBuilder.mergeFrom(getMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMessage(subBuilder.buildPartial());
              break;
            }
            case 42: {
              akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.ExceptionProtocol.newBuilder();
              if (hasException()) {
                subBuilder.mergeFrom(getException());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setException(subBuilder.buildPartial());
              break;
            }
            case 50: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasSupervisorUuid()) {
                subBuilder.mergeFrom(getSupervisorUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSupervisorUuid(subBuilder.buildPartial());
              break;
            }
            case 58: {
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder();
              if (hasSender()) {
                subBuilder.mergeFrom(getSender());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSender(subBuilder.buildPartial());
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              cookie_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol uuid = 1;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> uuidBuilder_;
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid() {
        if (uuidBuilder_ == null) {
          return uuid_;
        } else {
          return uuidBuilder_.getMessage();
        }
      }
      public Builder setUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (uuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uuid_ = value;
          onChanged();
        } else {
          uuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUuid(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (uuidBuilder_ == null) {
          uuid_ = builderForValue.build();
          onChanged();
        } else {
          uuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (uuidBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              uuid_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            uuid_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
          } else {
            uuid_ = value;
          }
          onChanged();
        } else {
          uuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUuid() {
        if (uuidBuilder_ == null) {
          uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          uuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getUuidBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUuidFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder() {
        if (uuidBuilder_ != null) {
          return uuidBuilder_.getMessageOrBuilder();
        } else {
          return uuid_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getUuidFieldBuilder() {
        if (uuidBuilder_ == null) {
          uuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  uuid_,
                  getParentForChildren(),
                  isClean());
          uuid_ = null;
        }
        return uuidBuilder_;
      }
      
      // required .ActorInfoProtocol actorInfo = 2;
      private akka.remote.protocol.RemoteProtocol.ActorInfoProtocol actorInfo_ = akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.ActorInfoProtocol, akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder, akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder> actorInfoBuilder_;
      public boolean hasActorInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public akka.remote.protocol.RemoteProtocol.ActorInfoProtocol getActorInfo() {
        if (actorInfoBuilder_ == null) {
          return actorInfo_;
        } else {
          return actorInfoBuilder_.getMessage();
        }
      }
      public Builder setActorInfo(akka.remote.protocol.RemoteProtocol.ActorInfoProtocol value) {
        if (actorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actorInfo_ = value;
          onChanged();
        } else {
          actorInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setActorInfo(
          akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder builderForValue) {
        if (actorInfoBuilder_ == null) {
          actorInfo_ = builderForValue.build();
          onChanged();
        } else {
          actorInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeActorInfo(akka.remote.protocol.RemoteProtocol.ActorInfoProtocol value) {
        if (actorInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              actorInfo_ != akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance()) {
            actorInfo_ =
              akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.newBuilder(actorInfo_).mergeFrom(value).buildPartial();
          } else {
            actorInfo_ = value;
          }
          onChanged();
        } else {
          actorInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearActorInfo() {
        if (actorInfoBuilder_ == null) {
          actorInfo_ = akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
          onChanged();
        } else {
          actorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder getActorInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getActorInfoFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder getActorInfoOrBuilder() {
        if (actorInfoBuilder_ != null) {
          return actorInfoBuilder_.getMessageOrBuilder();
        } else {
          return actorInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.ActorInfoProtocol, akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder, akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder> 
          getActorInfoFieldBuilder() {
        if (actorInfoBuilder_ == null) {
          actorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.ActorInfoProtocol, akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder, akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder>(
                  actorInfo_,
                  getParentForChildren(),
                  isClean());
          actorInfo_ = null;
        }
        return actorInfoBuilder_;
      }
      
      // required bool oneWay = 3;
      private boolean oneWay_ ;
      public boolean hasOneWay() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getOneWay() {
        return oneWay_;
      }
      public Builder setOneWay(boolean value) {
        bitField0_ |= 0x00000004;
        oneWay_ = value;
        onChanged();
        return this;
      }
      public Builder clearOneWay() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oneWay_ = false;
        onChanged();
        return this;
      }
      
      // optional .MessageProtocol message = 4;
      private akka.remote.protocol.RemoteProtocol.MessageProtocol message_ = akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.MessageProtocol, akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder> messageBuilder_;
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.remote.protocol.RemoteProtocol.MessageProtocol getMessage() {
        if (messageBuilder_ == null) {
          return message_;
        } else {
          return messageBuilder_.getMessage();
        }
      }
      public Builder setMessage(akka.remote.protocol.RemoteProtocol.MessageProtocol value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          messageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setMessage(
          akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder builderForValue) {
        if (messageBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          messageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeMessage(akka.remote.protocol.RemoteProtocol.MessageProtocol value) {
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              message_ != akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance()) {
            message_ =
              akka.remote.protocol.RemoteProtocol.MessageProtocol.newBuilder(message_).mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          messageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder getMessageBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMessageFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder getMessageOrBuilder() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilder();
        } else {
          return message_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.MessageProtocol, akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.MessageProtocol, akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder>(
                  message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }
      
      // optional .ExceptionProtocol exception = 5;
      private akka.remote.protocol.RemoteProtocol.ExceptionProtocol exception_ = akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.ExceptionProtocol, akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder, akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder> exceptionBuilder_;
      public boolean hasException() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public akka.remote.protocol.RemoteProtocol.ExceptionProtocol getException() {
        if (exceptionBuilder_ == null) {
          return exception_;
        } else {
          return exceptionBuilder_.getMessage();
        }
      }
      public Builder setException(akka.remote.protocol.RemoteProtocol.ExceptionProtocol value) {
        if (exceptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exception_ = value;
          onChanged();
        } else {
          exceptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setException(
          akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder builderForValue) {
        if (exceptionBuilder_ == null) {
          exception_ = builderForValue.build();
          onChanged();
        } else {
          exceptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeException(akka.remote.protocol.RemoteProtocol.ExceptionProtocol value) {
        if (exceptionBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              exception_ != akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance()) {
            exception_ =
              akka.remote.protocol.RemoteProtocol.ExceptionProtocol.newBuilder(exception_).mergeFrom(value).buildPartial();
          } else {
            exception_ = value;
          }
          onChanged();
        } else {
          exceptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearException() {
        if (exceptionBuilder_ == null) {
          exception_ = akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
          onChanged();
        } else {
          exceptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder getExceptionBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getExceptionFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder getExceptionOrBuilder() {
        if (exceptionBuilder_ != null) {
          return exceptionBuilder_.getMessageOrBuilder();
        } else {
          return exception_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.ExceptionProtocol, akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder, akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder> 
          getExceptionFieldBuilder() {
        if (exceptionBuilder_ == null) {
          exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.ExceptionProtocol, akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder, akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder>(
                  exception_,
                  getParentForChildren(),
                  isClean());
          exception_ = null;
        }
        return exceptionBuilder_;
      }
      
      // optional .UuidProtocol supervisorUuid = 6;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol supervisorUuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> supervisorUuidBuilder_;
      public boolean hasSupervisorUuid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getSupervisorUuid() {
        if (supervisorUuidBuilder_ == null) {
          return supervisorUuid_;
        } else {
          return supervisorUuidBuilder_.getMessage();
        }
      }
      public Builder setSupervisorUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (supervisorUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          supervisorUuid_ = value;
          onChanged();
        } else {
          supervisorUuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setSupervisorUuid(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (supervisorUuidBuilder_ == null) {
          supervisorUuid_ = builderForValue.build();
          onChanged();
        } else {
          supervisorUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeSupervisorUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (supervisorUuidBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              supervisorUuid_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            supervisorUuid_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(supervisorUuid_).mergeFrom(value).buildPartial();
          } else {
            supervisorUuid_ = value;
          }
          onChanged();
        } else {
          supervisorUuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearSupervisorUuid() {
        if (supervisorUuidBuilder_ == null) {
          supervisorUuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          supervisorUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getSupervisorUuidBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSupervisorUuidFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getSupervisorUuidOrBuilder() {
        if (supervisorUuidBuilder_ != null) {
          return supervisorUuidBuilder_.getMessageOrBuilder();
        } else {
          return supervisorUuid_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getSupervisorUuidFieldBuilder() {
        if (supervisorUuidBuilder_ == null) {
          supervisorUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  supervisorUuid_,
                  getParentForChildren(),
                  isClean());
          supervisorUuid_ = null;
        }
        return supervisorUuidBuilder_;
      }
      
      // optional .RemoteActorRefProtocol sender = 7;
      private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol sender_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder> senderBuilder_;
      public boolean hasSender() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getSender() {
        if (senderBuilder_ == null) {
          return sender_;
        } else {
          return senderBuilder_.getMessage();
        }
      }
      public Builder setSender(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (senderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sender_ = value;
          onChanged();
        } else {
          senderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setSender(
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder builderForValue) {
        if (senderBuilder_ == null) {
          sender_ = builderForValue.build();
          onChanged();
        } else {
          senderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeSender(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (senderBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              sender_ != akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
            sender_ =
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder(sender_).mergeFrom(value).buildPartial();
          } else {
            sender_ = value;
          }
          onChanged();
        } else {
          senderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearSender() {
        if (senderBuilder_ == null) {
          sender_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
          onChanged();
        } else {
          senderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder getSenderBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getSenderFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getSenderOrBuilder() {
        if (senderBuilder_ != null) {
          return senderBuilder_.getMessageOrBuilder();
        } else {
          return sender_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder> 
          getSenderFieldBuilder() {
        if (senderBuilder_ == null) {
          senderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder>(
                  sender_,
                  getParentForChildren(),
                  isClean());
          sender_ = null;
        }
        return senderBuilder_;
      }
      
      // optional string cookie = 8;
      private java.lang.Object cookie_ = "";
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getCookie() {
        java.lang.Object ref = cookie_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cookie_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCookie(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        cookie_ = value;
        onChanged();
        return this;
      }
      public Builder clearCookie() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cookie_ = getDefaultInstance().getCookie();
        onChanged();
        return this;
      }
      void setCookie(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        cookie_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteMessageProtocol)
    }
    
    static {
      defaultInstance = new RemoteMessageProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteMessageProtocol)
  }
  
  public interface RemoteControlProtocolOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<RemoteControlProtocol> {
    
    // optional string cookie = 1;
    boolean hasCookie();
    String getCookie();
    
    // required .CommandType commandType = 2;
    boolean hasCommandType();
    akka.remote.protocol.RemoteProtocol.CommandType getCommandType();
  }
  public static final class RemoteControlProtocol extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        RemoteControlProtocol> implements RemoteControlProtocolOrBuilder {
    // Use RemoteControlProtocol.newBuilder() to construct.
    private RemoteControlProtocol(Builder builder) {
      super(builder);
    }
    private RemoteControlProtocol(boolean noInit) {}
    
    private static final RemoteControlProtocol defaultInstance;
    public static RemoteControlProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteControlProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteControlProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteControlProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string cookie = 1;
    public static final int COOKIE_FIELD_NUMBER = 1;
    private java.lang.Object cookie_;
    public boolean hasCookie() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getCookie() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cookie_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCookieBytes() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cookie_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .CommandType commandType = 2;
    public static final int COMMANDTYPE_FIELD_NUMBER = 2;
    private akka.remote.protocol.RemoteProtocol.CommandType commandType_;
    public boolean hasCommandType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public akka.remote.protocol.RemoteProtocol.CommandType getCommandType() {
      return commandType_;
    }
    
    private void initFields() {
      cookie_ = "";
      commandType_ = akka.remote.protocol.RemoteProtocol.CommandType.SHUTDOWN;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCommandType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<akka.remote.protocol.RemoteProtocol.RemoteControlProtocol>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCookieBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, commandType_.getNumber());
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCookieBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, commandType_.getNumber());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.RemoteControlProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteControlProtocol, Builder> implements akka.remote.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteControlProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteControlProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cookie_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        commandType_ = akka.remote.protocol.RemoteProtocol.CommandType.SHUTDOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteControlProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteControlProtocol build() {
        akka.remote.protocol.RemoteProtocol.RemoteControlProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.RemoteControlProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.RemoteControlProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteControlProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.RemoteControlProtocol result = new akka.remote.protocol.RemoteProtocol.RemoteControlProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cookie_ = cookie_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commandType_ = commandType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.RemoteControlProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.RemoteControlProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.RemoteControlProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance()) return this;
        if (other.hasCookie()) {
          setCookie(other.getCookie());
        }
        if (other.hasCommandType()) {
          setCommandType(other.getCommandType());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCommandType()) {
          
          return false;
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              cookie_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              akka.remote.protocol.RemoteProtocol.CommandType value = akka.remote.protocol.RemoteProtocol.CommandType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                commandType_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string cookie = 1;
      private java.lang.Object cookie_ = "";
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getCookie() {
        java.lang.Object ref = cookie_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cookie_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCookie(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cookie_ = value;
        onChanged();
        return this;
      }
      public Builder clearCookie() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cookie_ = getDefaultInstance().getCookie();
        onChanged();
        return this;
      }
      void setCookie(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        cookie_ = value;
        onChanged();
      }
      
      // required .CommandType commandType = 2;
      private akka.remote.protocol.RemoteProtocol.CommandType commandType_ = akka.remote.protocol.RemoteProtocol.CommandType.SHUTDOWN;
      public boolean hasCommandType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public akka.remote.protocol.RemoteProtocol.CommandType getCommandType() {
        return commandType_;
      }
      public Builder setCommandType(akka.remote.protocol.RemoteProtocol.CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        commandType_ = value;
        onChanged();
        return this;
      }
      public Builder clearCommandType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commandType_ = akka.remote.protocol.RemoteProtocol.CommandType.SHUTDOWN;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteControlProtocol)
    }
    
    static {
      defaultInstance = new RemoteControlProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteControlProtocol)
  }
  
  public interface ByteCodeRequestProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .UuidProtocol rclId = 1;
    boolean hasRclId();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder();
    
    // required string fqn = 2;
    boolean hasFqn();
    String getFqn();
  }
  public static final class ByteCodeRequestProtocol extends
      com.google.protobuf.GeneratedMessage
      implements ByteCodeRequestProtocolOrBuilder {
    // Use ByteCodeRequestProtocol.newBuilder() to construct.
    private ByteCodeRequestProtocol(Builder builder) {
      super(builder);
    }
    private ByteCodeRequestProtocol(boolean noInit) {}
    
    private static final ByteCodeRequestProtocol defaultInstance;
    public static ByteCodeRequestProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public ByteCodeRequestProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeRequestProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeRequestProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .UuidProtocol rclId = 1;
    public static final int RCLID_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol rclId_;
    public boolean hasRclId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId() {
      return rclId_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder() {
      return rclId_;
    }
    
    // required string fqn = 2;
    public static final int FQN_FIELD_NUMBER = 2;
    private java.lang.Object fqn_;
    public boolean hasFqn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFqn() {
      java.lang.Object ref = fqn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          fqn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFqnBytes() {
      java.lang.Object ref = fqn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        fqn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      fqn_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRclId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFqn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRclId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, rclId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFqnBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rclId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFqnBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeRequestProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeRequestProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRclIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (rclIdBuilder_ == null) {
          rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          rclIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        fqn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol build() {
        akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol result = new akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (rclIdBuilder_ == null) {
          result.rclId_ = rclId_;
        } else {
          result.rclId_ = rclIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fqn_ = fqn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.getDefaultInstance()) return this;
        if (other.hasRclId()) {
          mergeRclId(other.getRclId());
        }
        if (other.hasFqn()) {
          setFqn(other.getFqn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRclId()) {
          
          return false;
        }
        if (!hasFqn()) {
          
          return false;
        }
        if (!getRclId().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasRclId()) {
                subBuilder.mergeFrom(getRclId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRclId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              fqn_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol rclId = 1;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> rclIdBuilder_;
      public boolean hasRclId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId() {
        if (rclIdBuilder_ == null) {
          return rclId_;
        } else {
          return rclIdBuilder_.getMessage();
        }
      }
      public Builder setRclId(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (rclIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rclId_ = value;
          onChanged();
        } else {
          rclIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setRclId(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (rclIdBuilder_ == null) {
          rclId_ = builderForValue.build();
          onChanged();
        } else {
          rclIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeRclId(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (rclIdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              rclId_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            rclId_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(rclId_).mergeFrom(value).buildPartial();
          } else {
            rclId_ = value;
          }
          onChanged();
        } else {
          rclIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearRclId() {
        if (rclIdBuilder_ == null) {
          rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          rclIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getRclIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRclIdFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder() {
        if (rclIdBuilder_ != null) {
          return rclIdBuilder_.getMessageOrBuilder();
        } else {
          return rclId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getRclIdFieldBuilder() {
        if (rclIdBuilder_ == null) {
          rclIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  rclId_,
                  getParentForChildren(),
                  isClean());
          rclId_ = null;
        }
        return rclIdBuilder_;
      }
      
      // required string fqn = 2;
      private java.lang.Object fqn_ = "";
      public boolean hasFqn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFqn() {
        java.lang.Object ref = fqn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          fqn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFqn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fqn_ = value;
        onChanged();
        return this;
      }
      public Builder clearFqn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fqn_ = getDefaultInstance().getFqn();
        onChanged();
        return this;
      }
      void setFqn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        fqn_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:ByteCodeRequestProtocol)
    }
    
    static {
      defaultInstance = new ByteCodeRequestProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ByteCodeRequestProtocol)
  }
  
  public interface ByteCodeResponseProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .UuidProtocol rclId = 1;
    boolean hasRclId();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder();
    
    // required string fqn = 2;
    boolean hasFqn();
    String getFqn();
    
    // required .ByteCodeResponseCode responseCode = 3;
    boolean hasResponseCode();
    akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode getResponseCode();
    
    // optional bytes bytecode = 4;
    boolean hasBytecode();
    com.google.protobuf.ByteString getBytecode();
  }
  public static final class ByteCodeResponseProtocol extends
      com.google.protobuf.GeneratedMessage
      implements ByteCodeResponseProtocolOrBuilder {
    // Use ByteCodeResponseProtocol.newBuilder() to construct.
    private ByteCodeResponseProtocol(Builder builder) {
      super(builder);
    }
    private ByteCodeResponseProtocol(boolean noInit) {}
    
    private static final ByteCodeResponseProtocol defaultInstance;
    public static ByteCodeResponseProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public ByteCodeResponseProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeResponseProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeResponseProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .UuidProtocol rclId = 1;
    public static final int RCLID_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol rclId_;
    public boolean hasRclId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId() {
      return rclId_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder() {
      return rclId_;
    }
    
    // required string fqn = 2;
    public static final int FQN_FIELD_NUMBER = 2;
    private java.lang.Object fqn_;
    public boolean hasFqn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFqn() {
      java.lang.Object ref = fqn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          fqn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFqnBytes() {
      java.lang.Object ref = fqn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        fqn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .ByteCodeResponseCode responseCode = 3;
    public static final int RESPONSECODE_FIELD_NUMBER = 3;
    private akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode responseCode_;
    public boolean hasResponseCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode getResponseCode() {
      return responseCode_;
    }
    
    // optional bytes bytecode = 4;
    public static final int BYTECODE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString bytecode_;
    public boolean hasBytecode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.google.protobuf.ByteString getBytecode() {
      return bytecode_;
    }
    
    private void initFields() {
      rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      fqn_ = "";
      responseCode_ = akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode.OK;
      bytecode_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRclId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFqn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResponseCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRclId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, rclId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFqnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, responseCode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, bytecode_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rclId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFqnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, responseCode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, bytecode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeResponseProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ByteCodeResponseProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRclIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (rclIdBuilder_ == null) {
          rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          rclIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        fqn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        responseCode_ = akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode.OK;
        bitField0_ = (bitField0_ & ~0x00000004);
        bytecode_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol build() {
        akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol result = new akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (rclIdBuilder_ == null) {
          result.rclId_ = rclId_;
        } else {
          result.rclId_ = rclIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fqn_ = fqn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.responseCode_ = responseCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bytecode_ = bytecode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.getDefaultInstance()) return this;
        if (other.hasRclId()) {
          mergeRclId(other.getRclId());
        }
        if (other.hasFqn()) {
          setFqn(other.getFqn());
        }
        if (other.hasResponseCode()) {
          setResponseCode(other.getResponseCode());
        }
        if (other.hasBytecode()) {
          setBytecode(other.getBytecode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRclId()) {
          
          return false;
        }
        if (!hasFqn()) {
          
          return false;
        }
        if (!hasResponseCode()) {
          
          return false;
        }
        if (!getRclId().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasRclId()) {
                subBuilder.mergeFrom(getRclId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRclId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              fqn_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode value = akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                responseCode_ = value;
              }
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              bytecode_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol rclId = 1;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> rclIdBuilder_;
      public boolean hasRclId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId() {
        if (rclIdBuilder_ == null) {
          return rclId_;
        } else {
          return rclIdBuilder_.getMessage();
        }
      }
      public Builder setRclId(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (rclIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rclId_ = value;
          onChanged();
        } else {
          rclIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setRclId(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (rclIdBuilder_ == null) {
          rclId_ = builderForValue.build();
          onChanged();
        } else {
          rclIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeRclId(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (rclIdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              rclId_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            rclId_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(rclId_).mergeFrom(value).buildPartial();
          } else {
            rclId_ = value;
          }
          onChanged();
        } else {
          rclIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearRclId() {
        if (rclIdBuilder_ == null) {
          rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          rclIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getRclIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRclIdFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder() {
        if (rclIdBuilder_ != null) {
          return rclIdBuilder_.getMessageOrBuilder();
        } else {
          return rclId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getRclIdFieldBuilder() {
        if (rclIdBuilder_ == null) {
          rclIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  rclId_,
                  getParentForChildren(),
                  isClean());
          rclId_ = null;
        }
        return rclIdBuilder_;
      }
      
      // required string fqn = 2;
      private java.lang.Object fqn_ = "";
      public boolean hasFqn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFqn() {
        java.lang.Object ref = fqn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          fqn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFqn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fqn_ = value;
        onChanged();
        return this;
      }
      public Builder clearFqn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fqn_ = getDefaultInstance().getFqn();
        onChanged();
        return this;
      }
      void setFqn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        fqn_ = value;
        onChanged();
      }
      
      // required .ByteCodeResponseCode responseCode = 3;
      private akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode responseCode_ = akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode.OK;
      public boolean hasResponseCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode getResponseCode() {
        return responseCode_;
      }
      public Builder setResponseCode(akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        responseCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearResponseCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        responseCode_ = akka.remote.protocol.RemoteProtocol.ByteCodeResponseCode.OK;
        onChanged();
        return this;
      }
      
      // optional bytes bytecode = 4;
      private com.google.protobuf.ByteString bytecode_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasBytecode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.protobuf.ByteString getBytecode() {
        return bytecode_;
      }
      public Builder setBytecode(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bytecode_ = value;
        onChanged();
        return this;
      }
      public Builder clearBytecode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bytecode_ = getDefaultInstance().getBytecode();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ByteCodeResponseProtocol)
    }
    
    static {
      defaultInstance = new ByteCodeResponseProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ByteCodeResponseProtocol)
  }
  
  public interface RemoteActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string classOrServiceName = 1;
    boolean hasClassOrServiceName();
    String getClassOrServiceName();
    
    // required string actorClassname = 2;
    boolean hasActorClassname();
    String getActorClassname();
    
    // required .AddressProtocol homeAddress = 3;
    boolean hasHomeAddress();
    akka.remote.protocol.RemoteProtocol.AddressProtocol getHomeAddress();
    akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder getHomeAddressOrBuilder();
    
    // optional uint64 timeout = 4;
    boolean hasTimeout();
    long getTimeout();
  }
  public static final class RemoteActorRefProtocol extends
      com.google.protobuf.GeneratedMessage
      implements RemoteActorRefProtocolOrBuilder {
    // Use RemoteActorRefProtocol.newBuilder() to construct.
    private RemoteActorRefProtocol(Builder builder) {
      super(builder);
    }
    private RemoteActorRefProtocol(boolean noInit) {}
    
    private static final RemoteActorRefProtocol defaultInstance;
    public static RemoteActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteActorRefProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteActorRefProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string classOrServiceName = 1;
    public static final int CLASSORSERVICENAME_FIELD_NUMBER = 1;
    private java.lang.Object classOrServiceName_;
    public boolean hasClassOrServiceName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getClassOrServiceName() {
      java.lang.Object ref = classOrServiceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          classOrServiceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClassOrServiceNameBytes() {
      java.lang.Object ref = classOrServiceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        classOrServiceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string actorClassname = 2;
    public static final int ACTORCLASSNAME_FIELD_NUMBER = 2;
    private java.lang.Object actorClassname_;
    public boolean hasActorClassname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getActorClassname() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          actorClassname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getActorClassnameBytes() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        actorClassname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .AddressProtocol homeAddress = 3;
    public static final int HOMEADDRESS_FIELD_NUMBER = 3;
    private akka.remote.protocol.RemoteProtocol.AddressProtocol homeAddress_;
    public boolean hasHomeAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public akka.remote.protocol.RemoteProtocol.AddressProtocol getHomeAddress() {
      return homeAddress_;
    }
    public akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder getHomeAddressOrBuilder() {
      return homeAddress_;
    }
    
    // optional uint64 timeout = 4;
    public static final int TIMEOUT_FIELD_NUMBER = 4;
    private long timeout_;
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getTimeout() {
      return timeout_;
    }
    
    private void initFields() {
      classOrServiceName_ = "";
      actorClassname_ = "";
      homeAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      timeout_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasClassOrServiceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHomeAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHomeAddress().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassOrServiceNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, homeAddress_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, timeout_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassOrServiceNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, homeAddress_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, timeout_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteActorRefProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteActorRefProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHomeAddressFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        classOrServiceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        actorClassname_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (homeAddressBuilder_ == null) {
          homeAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
        } else {
          homeAddressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol build() {
        akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol result = new akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classOrServiceName_ = classOrServiceName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actorClassname_ = actorClassname_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (homeAddressBuilder_ == null) {
          result.homeAddress_ = homeAddress_;
        } else {
          result.homeAddress_ = homeAddressBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeout_ = timeout_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasClassOrServiceName()) {
          setClassOrServiceName(other.getClassOrServiceName());
        }
        if (other.hasActorClassname()) {
          setActorClassname(other.getActorClassname());
        }
        if (other.hasHomeAddress()) {
          mergeHomeAddress(other.getHomeAddress());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasClassOrServiceName()) {
          
          return false;
        }
        if (!hasActorClassname()) {
          
          return false;
        }
        if (!hasHomeAddress()) {
          
          return false;
        }
        if (!getHomeAddress().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              classOrServiceName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              actorClassname_ = input.readBytes();
              break;
            }
            case 26: {
              akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.AddressProtocol.newBuilder();
              if (hasHomeAddress()) {
                subBuilder.mergeFrom(getHomeAddress());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHomeAddress(subBuilder.buildPartial());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeout_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string classOrServiceName = 1;
      private java.lang.Object classOrServiceName_ = "";
      public boolean hasClassOrServiceName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getClassOrServiceName() {
        java.lang.Object ref = classOrServiceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          classOrServiceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClassOrServiceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        classOrServiceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearClassOrServiceName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classOrServiceName_ = getDefaultInstance().getClassOrServiceName();
        onChanged();
        return this;
      }
      void setClassOrServiceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        classOrServiceName_ = value;
        onChanged();
      }
      
      // required string actorClassname = 2;
      private java.lang.Object actorClassname_ = "";
      public boolean hasActorClassname() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getActorClassname() {
        java.lang.Object ref = actorClassname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          actorClassname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setActorClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        actorClassname_ = value;
        onChanged();
        return this;
      }
      public Builder clearActorClassname() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actorClassname_ = getDefaultInstance().getActorClassname();
        onChanged();
        return this;
      }
      void setActorClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        actorClassname_ = value;
        onChanged();
      }
      
      // required .AddressProtocol homeAddress = 3;
      private akka.remote.protocol.RemoteProtocol.AddressProtocol homeAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.AddressProtocol, akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder, akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder> homeAddressBuilder_;
      public boolean hasHomeAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public akka.remote.protocol.RemoteProtocol.AddressProtocol getHomeAddress() {
        if (homeAddressBuilder_ == null) {
          return homeAddress_;
        } else {
          return homeAddressBuilder_.getMessage();
        }
      }
      public Builder setHomeAddress(akka.remote.protocol.RemoteProtocol.AddressProtocol value) {
        if (homeAddressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          homeAddress_ = value;
          onChanged();
        } else {
          homeAddressBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setHomeAddress(
          akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder builderForValue) {
        if (homeAddressBuilder_ == null) {
          homeAddress_ = builderForValue.build();
          onChanged();
        } else {
          homeAddressBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeHomeAddress(akka.remote.protocol.RemoteProtocol.AddressProtocol value) {
        if (homeAddressBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              homeAddress_ != akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance()) {
            homeAddress_ =
              akka.remote.protocol.RemoteProtocol.AddressProtocol.newBuilder(homeAddress_).mergeFrom(value).buildPartial();
          } else {
            homeAddress_ = value;
          }
          onChanged();
        } else {
          homeAddressBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearHomeAddress() {
        if (homeAddressBuilder_ == null) {
          homeAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
          onChanged();
        } else {
          homeAddressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder getHomeAddressBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHomeAddressFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder getHomeAddressOrBuilder() {
        if (homeAddressBuilder_ != null) {
          return homeAddressBuilder_.getMessageOrBuilder();
        } else {
          return homeAddress_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.AddressProtocol, akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder, akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder> 
          getHomeAddressFieldBuilder() {
        if (homeAddressBuilder_ == null) {
          homeAddressBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.AddressProtocol, akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder, akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder>(
                  homeAddress_,
                  getParentForChildren(),
                  isClean());
          homeAddress_ = null;
        }
        return homeAddressBuilder_;
      }
      
      // optional uint64 timeout = 4;
      private long timeout_ ;
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getTimeout() {
        return timeout_;
      }
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000008;
        timeout_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeout_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteActorRefProtocol)
    }
    
    static {
      defaultInstance = new RemoteActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteActorRefProtocol)
  }
  
  public interface RemoteTypedActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .RemoteActorRefProtocol actorRef = 1;
    boolean hasActorRef();
    akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getActorRef();
    akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getActorRefOrBuilder();
    
    // required string interfaceName = 2;
    boolean hasInterfaceName();
    String getInterfaceName();
  }
  public static final class RemoteTypedActorRefProtocol extends
      com.google.protobuf.GeneratedMessage
      implements RemoteTypedActorRefProtocolOrBuilder {
    // Use RemoteTypedActorRefProtocol.newBuilder() to construct.
    private RemoteTypedActorRefProtocol(Builder builder) {
      super(builder);
    }
    private RemoteTypedActorRefProtocol(boolean noInit) {}
    
    private static final RemoteTypedActorRefProtocol defaultInstance;
    public static RemoteTypedActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteTypedActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteTypedActorRefProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_RemoteTypedActorRefProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .RemoteActorRefProtocol actorRef = 1;
    public static final int ACTORREF_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol actorRef_;
    public boolean hasActorRef() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getActorRef() {
      return actorRef_;
    }
    public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getActorRefOrBuilder() {
      return actorRef_;
    }
    
    // required string interfaceName = 2;
    public static final int INTERFACENAME_FIELD_NUMBER = 2;
    private java.lang.Object interfaceName_;
    public boolean hasInterfaceName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getInterfaceName() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          interfaceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInterfaceNameBytes() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      actorRef_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      interfaceName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasActorRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterfaceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActorRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInterfaceNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInterfaceNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteTypedActorRefProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_RemoteTypedActorRefProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActorRefFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (actorRefBuilder_ == null) {
          actorRef_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        } else {
          actorRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        interfaceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol build() {
        akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol result = new akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (actorRefBuilder_ == null) {
          result.actorRef_ = actorRef_;
        } else {
          result.actorRef_ = actorRefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.interfaceName_ = interfaceName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasActorRef()) {
          mergeActorRef(other.getActorRef());
        }
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasActorRef()) {
          
          return false;
        }
        if (!hasInterfaceName()) {
          
          return false;
        }
        if (!getActorRef().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder();
              if (hasActorRef()) {
                subBuilder.mergeFrom(getActorRef());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setActorRef(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              interfaceName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .RemoteActorRefProtocol actorRef = 1;
      private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol actorRef_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder> actorRefBuilder_;
      public boolean hasActorRef() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getActorRef() {
        if (actorRefBuilder_ == null) {
          return actorRef_;
        } else {
          return actorRefBuilder_.getMessage();
        }
      }
      public Builder setActorRef(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (actorRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actorRef_ = value;
          onChanged();
        } else {
          actorRefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setActorRef(
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder builderForValue) {
        if (actorRefBuilder_ == null) {
          actorRef_ = builderForValue.build();
          onChanged();
        } else {
          actorRefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeActorRef(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (actorRefBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              actorRef_ != akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
            actorRef_ =
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder(actorRef_).mergeFrom(value).buildPartial();
          } else {
            actorRef_ = value;
          }
          onChanged();
        } else {
          actorRefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearActorRef() {
        if (actorRefBuilder_ == null) {
          actorRef_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
          onChanged();
        } else {
          actorRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder getActorRefBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getActorRefFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getActorRefOrBuilder() {
        if (actorRefBuilder_ != null) {
          return actorRefBuilder_.getMessageOrBuilder();
        } else {
          return actorRef_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder> 
          getActorRefFieldBuilder() {
        if (actorRefBuilder_ == null) {
          actorRefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder>(
                  actorRef_,
                  getParentForChildren(),
                  isClean());
          actorRef_ = null;
        }
        return actorRefBuilder_;
      }
      
      // required string interfaceName = 2;
      private java.lang.Object interfaceName_ = "";
      public boolean hasInterfaceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getInterfaceName() {
        java.lang.Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInterfaceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        interfaceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearInterfaceName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interfaceName_ = getDefaultInstance().getInterfaceName();
        onChanged();
        return this;
      }
      void setInterfaceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        interfaceName_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteTypedActorRefProtocol)
    }
    
    static {
      defaultInstance = new RemoteTypedActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteTypedActorRefProtocol)
  }
  
  public interface SerializedActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .UuidProtocol uuid = 1;
    boolean hasUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder();
    
    // required string id = 2;
    boolean hasId();
    String getId();
    
    // required string actorClassname = 3;
    boolean hasActorClassname();
    String getActorClassname();
    
    // required .AddressProtocol originalAddress = 4;
    boolean hasOriginalAddress();
    akka.remote.protocol.RemoteProtocol.AddressProtocol getOriginalAddress();
    akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder getOriginalAddressOrBuilder();
    
    // optional bytes actorInstance = 5;
    boolean hasActorInstance();
    com.google.protobuf.ByteString getActorInstance();
    
    // optional string serializerClassname = 6;
    boolean hasSerializerClassname();
    String getSerializerClassname();
    
    // optional uint64 timeout = 7;
    boolean hasTimeout();
    long getTimeout();
    
    // optional uint64 receiveTimeout = 8;
    boolean hasReceiveTimeout();
    long getReceiveTimeout();
    
    // optional .LifeCycleProtocol lifeCycle = 9;
    boolean hasLifeCycle();
    akka.remote.protocol.RemoteProtocol.LifeCycleProtocol getLifeCycle();
    akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder getLifeCycleOrBuilder();
    
    // optional .RemoteActorRefProtocol supervisor = 10;
    boolean hasSupervisor();
    akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getSupervisor();
    akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getSupervisorOrBuilder();
    
    // optional bytes hotswapStack = 11;
    boolean hasHotswapStack();
    com.google.protobuf.ByteString getHotswapStack();
    
    // repeated .RemoteMessageProtocol messages = 12;
    java.util.List<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol> 
        getMessagesList();
    akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getMessages(int index);
    int getMessagesCount();
    java.util.List<? extends akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> 
        getMessagesOrBuilderList();
    akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessagesOrBuilder(
        int index);
  }
  public static final class SerializedActorRefProtocol extends
      com.google.protobuf.GeneratedMessage
      implements SerializedActorRefProtocolOrBuilder {
    // Use SerializedActorRefProtocol.newBuilder() to construct.
    private SerializedActorRefProtocol(Builder builder) {
      super(builder);
    }
    private SerializedActorRefProtocol(boolean noInit) {}
    
    private static final SerializedActorRefProtocol defaultInstance;
    public static SerializedActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public SerializedActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_SerializedActorRefProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_SerializedActorRefProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .UuidProtocol uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol uuid_;
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid() {
      return uuid_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder() {
      return uuid_;
    }
    
    // required string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string actorClassname = 3;
    public static final int ACTORCLASSNAME_FIELD_NUMBER = 3;
    private java.lang.Object actorClassname_;
    public boolean hasActorClassname() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getActorClassname() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          actorClassname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getActorClassnameBytes() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        actorClassname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .AddressProtocol originalAddress = 4;
    public static final int ORIGINALADDRESS_FIELD_NUMBER = 4;
    private akka.remote.protocol.RemoteProtocol.AddressProtocol originalAddress_;
    public boolean hasOriginalAddress() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.remote.protocol.RemoteProtocol.AddressProtocol getOriginalAddress() {
      return originalAddress_;
    }
    public akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder getOriginalAddressOrBuilder() {
      return originalAddress_;
    }
    
    // optional bytes actorInstance = 5;
    public static final int ACTORINSTANCE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString actorInstance_;
    public boolean hasActorInstance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.google.protobuf.ByteString getActorInstance() {
      return actorInstance_;
    }
    
    // optional string serializerClassname = 6;
    public static final int SERIALIZERCLASSNAME_FIELD_NUMBER = 6;
    private java.lang.Object serializerClassname_;
    public boolean hasSerializerClassname() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getSerializerClassname() {
      java.lang.Object ref = serializerClassname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serializerClassname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSerializerClassnameBytes() {
      java.lang.Object ref = serializerClassname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serializerClassname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 timeout = 7;
    public static final int TIMEOUT_FIELD_NUMBER = 7;
    private long timeout_;
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public long getTimeout() {
      return timeout_;
    }
    
    // optional uint64 receiveTimeout = 8;
    public static final int RECEIVETIMEOUT_FIELD_NUMBER = 8;
    private long receiveTimeout_;
    public boolean hasReceiveTimeout() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getReceiveTimeout() {
      return receiveTimeout_;
    }
    
    // optional .LifeCycleProtocol lifeCycle = 9;
    public static final int LIFECYCLE_FIELD_NUMBER = 9;
    private akka.remote.protocol.RemoteProtocol.LifeCycleProtocol lifeCycle_;
    public boolean hasLifeCycle() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public akka.remote.protocol.RemoteProtocol.LifeCycleProtocol getLifeCycle() {
      return lifeCycle_;
    }
    public akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder getLifeCycleOrBuilder() {
      return lifeCycle_;
    }
    
    // optional .RemoteActorRefProtocol supervisor = 10;
    public static final int SUPERVISOR_FIELD_NUMBER = 10;
    private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol supervisor_;
    public boolean hasSupervisor() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getSupervisor() {
      return supervisor_;
    }
    public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getSupervisorOrBuilder() {
      return supervisor_;
    }
    
    // optional bytes hotswapStack = 11;
    public static final int HOTSWAPSTACK_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString hotswapStack_;
    public boolean hasHotswapStack() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public com.google.protobuf.ByteString getHotswapStack() {
      return hotswapStack_;
    }
    
    // repeated .RemoteMessageProtocol messages = 12;
    public static final int MESSAGES_FIELD_NUMBER = 12;
    private java.util.List<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol> messages_;
    public java.util.List<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol> getMessagesList() {
      return messages_;
    }
    public java.util.List<? extends akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> 
        getMessagesOrBuilderList() {
      return messages_;
    }
    public int getMessagesCount() {
      return messages_.size();
    }
    public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getMessages(int index) {
      return messages_.get(index);
    }
    public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessagesOrBuilder(
        int index) {
      return messages_.get(index);
    }
    
    private void initFields() {
      uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      id_ = "";
      actorClassname_ = "";
      originalAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      actorInstance_ = com.google.protobuf.ByteString.EMPTY;
      serializerClassname_ = "";
      timeout_ = 0L;
      receiveTimeout_ = 0L;
      lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
      supervisor_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      hotswapStack_ = com.google.protobuf.ByteString.EMPTY;
      messages_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOriginalAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getUuid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOriginalAddress().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasLifeCycle()) {
        if (!getLifeCycle().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSupervisor()) {
        if (!getSupervisor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMessagesCount(); i++) {
        if (!getMessages(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, originalAddress_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, actorInstance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSerializerClassnameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, timeout_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, receiveTimeout_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, lifeCycle_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, supervisor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, hotswapStack_);
      }
      for (int i = 0; i < messages_.size(); i++) {
        output.writeMessage(12, messages_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, originalAddress_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, actorInstance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSerializerClassnameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, timeout_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, receiveTimeout_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, lifeCycle_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, supervisor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, hotswapStack_);
      }
      for (int i = 0; i < messages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, messages_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_SerializedActorRefProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_SerializedActorRefProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUuidFieldBuilder();
          getOriginalAddressFieldBuilder();
          getLifeCycleFieldBuilder();
          getSupervisorFieldBuilder();
          getMessagesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (uuidBuilder_ == null) {
          uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          uuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        actorClassname_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (originalAddressBuilder_ == null) {
          originalAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
        } else {
          originalAddressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        actorInstance_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        serializerClassname_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        receiveTimeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (lifeCycleBuilder_ == null) {
          lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
        } else {
          lifeCycleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (supervisorBuilder_ == null) {
          supervisor_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        } else {
          supervisorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        hotswapStack_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          messagesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol build() {
        akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol result = new akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (uuidBuilder_ == null) {
          result.uuid_ = uuid_;
        } else {
          result.uuid_ = uuidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.actorClassname_ = actorClassname_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (originalAddressBuilder_ == null) {
          result.originalAddress_ = originalAddress_;
        } else {
          result.originalAddress_ = originalAddressBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.actorInstance_ = actorInstance_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.serializerClassname_ = serializerClassname_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.receiveTimeout_ = receiveTimeout_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (lifeCycleBuilder_ == null) {
          result.lifeCycle_ = lifeCycle_;
        } else {
          result.lifeCycle_ = lifeCycleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (supervisorBuilder_ == null) {
          result.supervisor_ = supervisor_;
        } else {
          result.supervisor_ = supervisorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.hotswapStack_ = hotswapStack_;
        if (messagesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            messages_ = java.util.Collections.unmodifiableList(messages_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.messages_ = messages_;
        } else {
          result.messages_ = messagesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          mergeUuid(other.getUuid());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasActorClassname()) {
          setActorClassname(other.getActorClassname());
        }
        if (other.hasOriginalAddress()) {
          mergeOriginalAddress(other.getOriginalAddress());
        }
        if (other.hasActorInstance()) {
          setActorInstance(other.getActorInstance());
        }
        if (other.hasSerializerClassname()) {
          setSerializerClassname(other.getSerializerClassname());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasReceiveTimeout()) {
          setReceiveTimeout(other.getReceiveTimeout());
        }
        if (other.hasLifeCycle()) {
          mergeLifeCycle(other.getLifeCycle());
        }
        if (other.hasSupervisor()) {
          mergeSupervisor(other.getSupervisor());
        }
        if (other.hasHotswapStack()) {
          setHotswapStack(other.getHotswapStack());
        }
        if (messagesBuilder_ == null) {
          if (!other.messages_.isEmpty()) {
            if (messages_.isEmpty()) {
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureMessagesIsMutable();
              messages_.addAll(other.messages_);
            }
            onChanged();
          }
        } else {
          if (!other.messages_.isEmpty()) {
            if (messagesBuilder_.isEmpty()) {
              messagesBuilder_.dispose();
              messagesBuilder_ = null;
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000800);
              messagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessagesFieldBuilder() : null;
            } else {
              messagesBuilder_.addAllMessages(other.messages_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasActorClassname()) {
          
          return false;
        }
        if (!hasOriginalAddress()) {
          
          return false;
        }
        if (!getUuid().isInitialized()) {
          
          return false;
        }
        if (!getOriginalAddress().isInitialized()) {
          
          return false;
        }
        if (hasLifeCycle()) {
          if (!getLifeCycle().isInitialized()) {
            
            return false;
          }
        }
        if (hasSupervisor()) {
          if (!getSupervisor().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMessagesCount(); i++) {
          if (!getMessages(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasUuid()) {
                subBuilder.mergeFrom(getUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuid(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              id_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              actorClassname_ = input.readBytes();
              break;
            }
            case 34: {
              akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.AddressProtocol.newBuilder();
              if (hasOriginalAddress()) {
                subBuilder.mergeFrom(getOriginalAddress());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOriginalAddress(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              actorInstance_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              serializerClassname_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              timeout_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              receiveTimeout_ = input.readUInt64();
              break;
            }
            case 74: {
              akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.newBuilder();
              if (hasLifeCycle()) {
                subBuilder.mergeFrom(getLifeCycle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLifeCycle(subBuilder.buildPartial());
              break;
            }
            case 82: {
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder();
              if (hasSupervisor()) {
                subBuilder.mergeFrom(getSupervisor());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSupervisor(subBuilder.buildPartial());
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              hotswapStack_ = input.readBytes();
              break;
            }
            case 98: {
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMessages(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol uuid = 1;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> uuidBuilder_;
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid() {
        if (uuidBuilder_ == null) {
          return uuid_;
        } else {
          return uuidBuilder_.getMessage();
        }
      }
      public Builder setUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (uuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uuid_ = value;
          onChanged();
        } else {
          uuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUuid(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (uuidBuilder_ == null) {
          uuid_ = builderForValue.build();
          onChanged();
        } else {
          uuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (uuidBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              uuid_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            uuid_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
          } else {
            uuid_ = value;
          }
          onChanged();
        } else {
          uuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUuid() {
        if (uuidBuilder_ == null) {
          uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          uuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getUuidBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUuidFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder() {
        if (uuidBuilder_ != null) {
          return uuidBuilder_.getMessageOrBuilder();
        } else {
          return uuid_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getUuidFieldBuilder() {
        if (uuidBuilder_ == null) {
          uuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  uuid_,
                  getParentForChildren(),
                  isClean());
          uuid_ = null;
        }
        return uuidBuilder_;
      }
      
      // required string id = 2;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
      }
      
      // required string actorClassname = 3;
      private java.lang.Object actorClassname_ = "";
      public boolean hasActorClassname() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getActorClassname() {
        java.lang.Object ref = actorClassname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          actorClassname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setActorClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        actorClassname_ = value;
        onChanged();
        return this;
      }
      public Builder clearActorClassname() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actorClassname_ = getDefaultInstance().getActorClassname();
        onChanged();
        return this;
      }
      void setActorClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        actorClassname_ = value;
        onChanged();
      }
      
      // required .AddressProtocol originalAddress = 4;
      private akka.remote.protocol.RemoteProtocol.AddressProtocol originalAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.AddressProtocol, akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder, akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder> originalAddressBuilder_;
      public boolean hasOriginalAddress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.remote.protocol.RemoteProtocol.AddressProtocol getOriginalAddress() {
        if (originalAddressBuilder_ == null) {
          return originalAddress_;
        } else {
          return originalAddressBuilder_.getMessage();
        }
      }
      public Builder setOriginalAddress(akka.remote.protocol.RemoteProtocol.AddressProtocol value) {
        if (originalAddressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          originalAddress_ = value;
          onChanged();
        } else {
          originalAddressBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setOriginalAddress(
          akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder builderForValue) {
        if (originalAddressBuilder_ == null) {
          originalAddress_ = builderForValue.build();
          onChanged();
        } else {
          originalAddressBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeOriginalAddress(akka.remote.protocol.RemoteProtocol.AddressProtocol value) {
        if (originalAddressBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              originalAddress_ != akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance()) {
            originalAddress_ =
              akka.remote.protocol.RemoteProtocol.AddressProtocol.newBuilder(originalAddress_).mergeFrom(value).buildPartial();
          } else {
            originalAddress_ = value;
          }
          onChanged();
        } else {
          originalAddressBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearOriginalAddress() {
        if (originalAddressBuilder_ == null) {
          originalAddress_ = akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
          onChanged();
        } else {
          originalAddressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder getOriginalAddressBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOriginalAddressFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder getOriginalAddressOrBuilder() {
        if (originalAddressBuilder_ != null) {
          return originalAddressBuilder_.getMessageOrBuilder();
        } else {
          return originalAddress_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.AddressProtocol, akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder, akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder> 
          getOriginalAddressFieldBuilder() {
        if (originalAddressBuilder_ == null) {
          originalAddressBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.AddressProtocol, akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder, akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder>(
                  originalAddress_,
                  getParentForChildren(),
                  isClean());
          originalAddress_ = null;
        }
        return originalAddressBuilder_;
      }
      
      // optional bytes actorInstance = 5;
      private com.google.protobuf.ByteString actorInstance_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasActorInstance() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.google.protobuf.ByteString getActorInstance() {
        return actorInstance_;
      }
      public Builder setActorInstance(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        actorInstance_ = value;
        onChanged();
        return this;
      }
      public Builder clearActorInstance() {
        bitField0_ = (bitField0_ & ~0x00000010);
        actorInstance_ = getDefaultInstance().getActorInstance();
        onChanged();
        return this;
      }
      
      // optional string serializerClassname = 6;
      private java.lang.Object serializerClassname_ = "";
      public boolean hasSerializerClassname() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getSerializerClassname() {
        java.lang.Object ref = serializerClassname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serializerClassname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSerializerClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        serializerClassname_ = value;
        onChanged();
        return this;
      }
      public Builder clearSerializerClassname() {
        bitField0_ = (bitField0_ & ~0x00000020);
        serializerClassname_ = getDefaultInstance().getSerializerClassname();
        onChanged();
        return this;
      }
      void setSerializerClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        serializerClassname_ = value;
        onChanged();
      }
      
      // optional uint64 timeout = 7;
      private long timeout_ ;
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getTimeout() {
        return timeout_;
      }
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000040;
        timeout_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timeout_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 receiveTimeout = 8;
      private long receiveTimeout_ ;
      public boolean hasReceiveTimeout() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getReceiveTimeout() {
        return receiveTimeout_;
      }
      public Builder setReceiveTimeout(long value) {
        bitField0_ |= 0x00000080;
        receiveTimeout_ = value;
        onChanged();
        return this;
      }
      public Builder clearReceiveTimeout() {
        bitField0_ = (bitField0_ & ~0x00000080);
        receiveTimeout_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .LifeCycleProtocol lifeCycle = 9;
      private akka.remote.protocol.RemoteProtocol.LifeCycleProtocol lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.LifeCycleProtocol, akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder, akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder> lifeCycleBuilder_;
      public boolean hasLifeCycle() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public akka.remote.protocol.RemoteProtocol.LifeCycleProtocol getLifeCycle() {
        if (lifeCycleBuilder_ == null) {
          return lifeCycle_;
        } else {
          return lifeCycleBuilder_.getMessage();
        }
      }
      public Builder setLifeCycle(akka.remote.protocol.RemoteProtocol.LifeCycleProtocol value) {
        if (lifeCycleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lifeCycle_ = value;
          onChanged();
        } else {
          lifeCycleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setLifeCycle(
          akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder builderForValue) {
        if (lifeCycleBuilder_ == null) {
          lifeCycle_ = builderForValue.build();
          onChanged();
        } else {
          lifeCycleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergeLifeCycle(akka.remote.protocol.RemoteProtocol.LifeCycleProtocol value) {
        if (lifeCycleBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              lifeCycle_ != akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance()) {
            lifeCycle_ =
              akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.newBuilder(lifeCycle_).mergeFrom(value).buildPartial();
          } else {
            lifeCycle_ = value;
          }
          onChanged();
        } else {
          lifeCycleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearLifeCycle() {
        if (lifeCycleBuilder_ == null) {
          lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
          onChanged();
        } else {
          lifeCycleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder getLifeCycleBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getLifeCycleFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder getLifeCycleOrBuilder() {
        if (lifeCycleBuilder_ != null) {
          return lifeCycleBuilder_.getMessageOrBuilder();
        } else {
          return lifeCycle_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.LifeCycleProtocol, akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder, akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder> 
          getLifeCycleFieldBuilder() {
        if (lifeCycleBuilder_ == null) {
          lifeCycleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.LifeCycleProtocol, akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder, akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder>(
                  lifeCycle_,
                  getParentForChildren(),
                  isClean());
          lifeCycle_ = null;
        }
        return lifeCycleBuilder_;
      }
      
      // optional .RemoteActorRefProtocol supervisor = 10;
      private akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol supervisor_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder> supervisorBuilder_;
      public boolean hasSupervisor() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol getSupervisor() {
        if (supervisorBuilder_ == null) {
          return supervisor_;
        } else {
          return supervisorBuilder_.getMessage();
        }
      }
      public Builder setSupervisor(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (supervisorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          supervisor_ = value;
          onChanged();
        } else {
          supervisorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setSupervisor(
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder builderForValue) {
        if (supervisorBuilder_ == null) {
          supervisor_ = builderForValue.build();
          onChanged();
        } else {
          supervisorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeSupervisor(akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (supervisorBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              supervisor_ != akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
            supervisor_ =
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder(supervisor_).mergeFrom(value).buildPartial();
          } else {
            supervisor_ = value;
          }
          onChanged();
        } else {
          supervisorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearSupervisor() {
        if (supervisorBuilder_ == null) {
          supervisor_ = akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
          onChanged();
        } else {
          supervisorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder getSupervisorBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getSupervisorFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder getSupervisorOrBuilder() {
        if (supervisorBuilder_ != null) {
          return supervisorBuilder_.getMessageOrBuilder();
        } else {
          return supervisor_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder> 
          getSupervisorFieldBuilder() {
        if (supervisorBuilder_ == null) {
          supervisorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder>(
                  supervisor_,
                  getParentForChildren(),
                  isClean());
          supervisor_ = null;
        }
        return supervisorBuilder_;
      }
      
      // optional bytes hotswapStack = 11;
      private com.google.protobuf.ByteString hotswapStack_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasHotswapStack() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public com.google.protobuf.ByteString getHotswapStack() {
        return hotswapStack_;
      }
      public Builder setHotswapStack(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        hotswapStack_ = value;
        onChanged();
        return this;
      }
      public Builder clearHotswapStack() {
        bitField0_ = (bitField0_ & ~0x00000400);
        hotswapStack_ = getDefaultInstance().getHotswapStack();
        onChanged();
        return this;
      }
      
      // repeated .RemoteMessageProtocol messages = 12;
      private java.util.List<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol> messages_ =
        java.util.Collections.emptyList();
      private void ensureMessagesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          messages_ = new java.util.ArrayList<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol>(messages_);
          bitField0_ |= 0x00000800;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> messagesBuilder_;
      
      public java.util.List<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol> getMessagesList() {
        if (messagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(messages_);
        } else {
          return messagesBuilder_.getMessageList();
        }
      }
      public int getMessagesCount() {
        if (messagesBuilder_ == null) {
          return messages_.size();
        } else {
          return messagesBuilder_.getCount();
        }
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol getMessages(int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);
        } else {
          return messagesBuilder_.getMessage(index);
        }
      }
      public Builder setMessages(
          int index, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.set(index, value);
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMessages(
          int index, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.set(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMessages(akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMessages(
          int index, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(index, value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMessages(
          akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMessages(
          int index, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMessages(
          java.lang.Iterable<? extends akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol> values) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          super.addAll(values, messages_);
          onChanged();
        } else {
          messagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMessages() {
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          messagesBuilder_.clear();
        }
        return this;
      }
      public Builder removeMessages(int index) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.remove(index);
          onChanged();
        } else {
          messagesBuilder_.remove(index);
        }
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder getMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().getBuilder(index);
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessagesOrBuilder(
          int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);  } else {
          return messagesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> 
           getMessagesOrBuilderList() {
        if (messagesBuilder_ != null) {
          return messagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(messages_);
        }
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder addMessagesBuilder() {
        return getMessagesFieldBuilder().addBuilder(
            akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance());
      }
      public akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder addMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().addBuilder(
            index, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance());
      }
      public java.util.List<akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder> 
           getMessagesBuilderList() {
        return getMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> 
          getMessagesFieldBuilder() {
        if (messagesBuilder_ == null) {
          messagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder, akka.remote.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder>(
                  messages_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          messages_ = null;
        }
        return messagesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:SerializedActorRefProtocol)
    }
    
    static {
      defaultInstance = new SerializedActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SerializedActorRefProtocol)
  }
  
  public interface SerializedTypedActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .SerializedActorRefProtocol actorRef = 1;
    boolean hasActorRef();
    akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol getActorRef();
    akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder getActorRefOrBuilder();
    
    // required string interfaceName = 2;
    boolean hasInterfaceName();
    String getInterfaceName();
  }
  public static final class SerializedTypedActorRefProtocol extends
      com.google.protobuf.GeneratedMessage
      implements SerializedTypedActorRefProtocolOrBuilder {
    // Use SerializedTypedActorRefProtocol.newBuilder() to construct.
    private SerializedTypedActorRefProtocol(Builder builder) {
      super(builder);
    }
    private SerializedTypedActorRefProtocol(boolean noInit) {}
    
    private static final SerializedTypedActorRefProtocol defaultInstance;
    public static SerializedTypedActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public SerializedTypedActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_SerializedTypedActorRefProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_SerializedTypedActorRefProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .SerializedActorRefProtocol actorRef = 1;
    public static final int ACTORREF_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol actorRef_;
    public boolean hasActorRef() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol getActorRef() {
      return actorRef_;
    }
    public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder getActorRefOrBuilder() {
      return actorRef_;
    }
    
    // required string interfaceName = 2;
    public static final int INTERFACENAME_FIELD_NUMBER = 2;
    private java.lang.Object interfaceName_;
    public boolean hasInterfaceName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getInterfaceName() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          interfaceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInterfaceNameBytes() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      actorRef_ = akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
      interfaceName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasActorRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterfaceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActorRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInterfaceNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInterfaceNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_SerializedTypedActorRefProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_SerializedTypedActorRefProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActorRefFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (actorRefBuilder_ == null) {
          actorRef_ = akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
        } else {
          actorRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        interfaceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol build() {
        akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol result = new akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (actorRefBuilder_ == null) {
          result.actorRef_ = actorRef_;
        } else {
          result.actorRef_ = actorRefBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.interfaceName_ = interfaceName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasActorRef()) {
          mergeActorRef(other.getActorRef());
        }
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasActorRef()) {
          
          return false;
        }
        if (!hasInterfaceName()) {
          
          return false;
        }
        if (!getActorRef().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.newBuilder();
              if (hasActorRef()) {
                subBuilder.mergeFrom(getActorRef());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setActorRef(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              interfaceName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .SerializedActorRefProtocol actorRef = 1;
      private akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol actorRef_ = akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol, akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder> actorRefBuilder_;
      public boolean hasActorRef() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol getActorRef() {
        if (actorRefBuilder_ == null) {
          return actorRef_;
        } else {
          return actorRefBuilder_.getMessage();
        }
      }
      public Builder setActorRef(akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol value) {
        if (actorRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actorRef_ = value;
          onChanged();
        } else {
          actorRefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setActorRef(
          akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder builderForValue) {
        if (actorRefBuilder_ == null) {
          actorRef_ = builderForValue.build();
          onChanged();
        } else {
          actorRefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeActorRef(akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol value) {
        if (actorRefBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              actorRef_ != akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance()) {
            actorRef_ =
              akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.newBuilder(actorRef_).mergeFrom(value).buildPartial();
          } else {
            actorRef_ = value;
          }
          onChanged();
        } else {
          actorRefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearActorRef() {
        if (actorRefBuilder_ == null) {
          actorRef_ = akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
          onChanged();
        } else {
          actorRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder getActorRefBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getActorRefFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder getActorRefOrBuilder() {
        if (actorRefBuilder_ != null) {
          return actorRefBuilder_.getMessageOrBuilder();
        } else {
          return actorRef_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol, akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder> 
          getActorRefFieldBuilder() {
        if (actorRefBuilder_ == null) {
          actorRefBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol, akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder, akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder>(
                  actorRef_,
                  getParentForChildren(),
                  isClean());
          actorRef_ = null;
        }
        return actorRefBuilder_;
      }
      
      // required string interfaceName = 2;
      private java.lang.Object interfaceName_ = "";
      public boolean hasInterfaceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getInterfaceName() {
        java.lang.Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInterfaceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        interfaceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearInterfaceName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interfaceName_ = getDefaultInstance().getInterfaceName();
        onChanged();
        return this;
      }
      void setInterfaceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        interfaceName_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:SerializedTypedActorRefProtocol)
    }
    
    static {
      defaultInstance = new SerializedTypedActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SerializedTypedActorRefProtocol)
  }
  
  public interface MessageProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .SerializationSchemeType serializationScheme = 1;
    boolean hasSerializationScheme();
    akka.remote.protocol.RemoteProtocol.SerializationSchemeType getSerializationScheme();
    
    // required bytes message = 2;
    boolean hasMessage();
    com.google.protobuf.ByteString getMessage();
    
    // optional bytes messageManifest = 3;
    boolean hasMessageManifest();
    com.google.protobuf.ByteString getMessageManifest();
    
    // optional .UuidProtocol rclId = 4;
    boolean hasRclId();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder();
  }
  public static final class MessageProtocol extends
      com.google.protobuf.GeneratedMessage
      implements MessageProtocolOrBuilder {
    // Use MessageProtocol.newBuilder() to construct.
    private MessageProtocol(Builder builder) {
      super(builder);
    }
    private MessageProtocol(boolean noInit) {}
    
    private static final MessageProtocol defaultInstance;
    public static MessageProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_MessageProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_MessageProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .SerializationSchemeType serializationScheme = 1;
    public static final int SERIALIZATIONSCHEME_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.SerializationSchemeType serializationScheme_;
    public boolean hasSerializationScheme() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.SerializationSchemeType getSerializationScheme() {
      return serializationScheme_;
    }
    
    // required bytes message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }
    
    // optional bytes messageManifest = 3;
    public static final int MESSAGEMANIFEST_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString messageManifest_;
    public boolean hasMessageManifest() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getMessageManifest() {
      return messageManifest_;
    }
    
    // optional .UuidProtocol rclId = 4;
    public static final int RCLID_FIELD_NUMBER = 4;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol rclId_;
    public boolean hasRclId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId() {
      return rclId_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder() {
      return rclId_;
    }
    
    private void initFields() {
      serializationScheme_ = akka.remote.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
      message_ = com.google.protobuf.ByteString.EMPTY;
      messageManifest_ = com.google.protobuf.ByteString.EMPTY;
      rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSerializationScheme()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRclId()) {
        if (!getRclId().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, serializationScheme_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, message_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, messageManifest_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, rclId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, serializationScheme_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, message_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, messageManifest_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rclId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.MessageProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.MessageProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_MessageProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_MessageProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.MessageProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRclIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        serializationScheme_ = akka.remote.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        messageManifest_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (rclIdBuilder_ == null) {
          rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          rclIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.MessageProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.MessageProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.MessageProtocol build() {
        akka.remote.protocol.RemoteProtocol.MessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.MessageProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.MessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.MessageProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.MessageProtocol result = new akka.remote.protocol.RemoteProtocol.MessageProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serializationScheme_ = serializationScheme_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageManifest_ = messageManifest_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (rclIdBuilder_ == null) {
          result.rclId_ = rclId_;
        } else {
          result.rclId_ = rclIdBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.MessageProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.MessageProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.MessageProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance()) return this;
        if (other.hasSerializationScheme()) {
          setSerializationScheme(other.getSerializationScheme());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasMessageManifest()) {
          setMessageManifest(other.getMessageManifest());
        }
        if (other.hasRclId()) {
          mergeRclId(other.getRclId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSerializationScheme()) {
          
          return false;
        }
        if (!hasMessage()) {
          
          return false;
        }
        if (hasRclId()) {
          if (!getRclId().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              akka.remote.protocol.RemoteProtocol.SerializationSchemeType value = akka.remote.protocol.RemoteProtocol.SerializationSchemeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                serializationScheme_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              messageManifest_ = input.readBytes();
              break;
            }
            case 34: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasRclId()) {
                subBuilder.mergeFrom(getRclId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRclId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .SerializationSchemeType serializationScheme = 1;
      private akka.remote.protocol.RemoteProtocol.SerializationSchemeType serializationScheme_ = akka.remote.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
      public boolean hasSerializationScheme() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.SerializationSchemeType getSerializationScheme() {
        return serializationScheme_;
      }
      public Builder setSerializationScheme(akka.remote.protocol.RemoteProtocol.SerializationSchemeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        serializationScheme_ = value;
        onChanged();
        return this;
      }
      public Builder clearSerializationScheme() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serializationScheme_ = akka.remote.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
        onChanged();
        return this;
      }
      
      // required bytes message = 2;
      private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getMessage() {
        return message_;
      }
      public Builder setMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      
      // optional bytes messageManifest = 3;
      private com.google.protobuf.ByteString messageManifest_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMessageManifest() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getMessageManifest() {
        return messageManifest_;
      }
      public Builder setMessageManifest(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageManifest_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessageManifest() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageManifest_ = getDefaultInstance().getMessageManifest();
        onChanged();
        return this;
      }
      
      // optional .UuidProtocol rclId = 4;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> rclIdBuilder_;
      public boolean hasRclId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getRclId() {
        if (rclIdBuilder_ == null) {
          return rclId_;
        } else {
          return rclIdBuilder_.getMessage();
        }
      }
      public Builder setRclId(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (rclIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rclId_ = value;
          onChanged();
        } else {
          rclIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setRclId(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (rclIdBuilder_ == null) {
          rclId_ = builderForValue.build();
          onChanged();
        } else {
          rclIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeRclId(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (rclIdBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              rclId_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            rclId_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(rclId_).mergeFrom(value).buildPartial();
          } else {
            rclId_ = value;
          }
          onChanged();
        } else {
          rclIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearRclId() {
        if (rclIdBuilder_ == null) {
          rclId_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          rclIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getRclIdBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRclIdFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getRclIdOrBuilder() {
        if (rclIdBuilder_ != null) {
          return rclIdBuilder_.getMessageOrBuilder();
        } else {
          return rclId_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getRclIdFieldBuilder() {
        if (rclIdBuilder_ == null) {
          rclIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  rclId_,
                  getParentForChildren(),
                  isClean());
          rclId_ = null;
        }
        return rclIdBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:MessageProtocol)
    }
    
    static {
      defaultInstance = new MessageProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessageProtocol)
  }
  
  public interface ActorInfoProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .UuidProtocol uuid = 1;
    boolean hasUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid();
    akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder();
    
    // required string target = 2;
    boolean hasTarget();
    String getTarget();
    
    // required uint64 timeout = 3;
    boolean hasTimeout();
    long getTimeout();
    
    // required .ActorType actorType = 4;
    boolean hasActorType();
    akka.remote.protocol.RemoteProtocol.ActorType getActorType();
    
    // optional .TypedActorInfoProtocol typedActorInfo = 5;
    boolean hasTypedActorInfo();
    akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol getTypedActorInfo();
    akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder getTypedActorInfoOrBuilder();
    
    // optional string id = 6;
    boolean hasId();
    String getId();
  }
  public static final class ActorInfoProtocol extends
      com.google.protobuf.GeneratedMessage
      implements ActorInfoProtocolOrBuilder {
    // Use ActorInfoProtocol.newBuilder() to construct.
    private ActorInfoProtocol(Builder builder) {
      super(builder);
    }
    private ActorInfoProtocol(boolean noInit) {}
    
    private static final ActorInfoProtocol defaultInstance;
    public static ActorInfoProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public ActorInfoProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ActorInfoProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ActorInfoProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .UuidProtocol uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.UuidProtocol uuid_;
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid() {
      return uuid_;
    }
    public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder() {
      return uuid_;
    }
    
    // required string target = 2;
    public static final int TARGET_FIELD_NUMBER = 2;
    private java.lang.Object target_;
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          target_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint64 timeout = 3;
    public static final int TIMEOUT_FIELD_NUMBER = 3;
    private long timeout_;
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTimeout() {
      return timeout_;
    }
    
    // required .ActorType actorType = 4;
    public static final int ACTORTYPE_FIELD_NUMBER = 4;
    private akka.remote.protocol.RemoteProtocol.ActorType actorType_;
    public boolean hasActorType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.remote.protocol.RemoteProtocol.ActorType getActorType() {
      return actorType_;
    }
    
    // optional .TypedActorInfoProtocol typedActorInfo = 5;
    public static final int TYPEDACTORINFO_FIELD_NUMBER = 5;
    private akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol typedActorInfo_;
    public boolean hasTypedActorInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol getTypedActorInfo() {
      return typedActorInfo_;
    }
    public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder getTypedActorInfoOrBuilder() {
      return typedActorInfo_;
    }
    
    // optional string id = 6;
    public static final int ID_FIELD_NUMBER = 6;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      target_ = "";
      timeout_ = 0L;
      actorType_ = akka.remote.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
      typedActorInfo_ = akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
      id_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTarget()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeout()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getUuid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTypedActorInfo()) {
        if (!getTypedActorInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, timeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, actorType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, typedActorInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getIdBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTargetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, timeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, actorType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, typedActorInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.ActorInfoProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ActorInfoProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ActorInfoProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUuidFieldBuilder();
          getTypedActorInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (uuidBuilder_ == null) {
          uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        } else {
          uuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        target_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        actorType_ = akka.remote.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (typedActorInfoBuilder_ == null) {
          typedActorInfo_ = akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
        } else {
          typedActorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.ActorInfoProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.ActorInfoProtocol build() {
        akka.remote.protocol.RemoteProtocol.ActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.ActorInfoProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.ActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.ActorInfoProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.ActorInfoProtocol result = new akka.remote.protocol.RemoteProtocol.ActorInfoProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (uuidBuilder_ == null) {
          result.uuid_ = uuid_;
        } else {
          result.uuid_ = uuidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.actorType_ = actorType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (typedActorInfoBuilder_ == null) {
          result.typedActorInfo_ = typedActorInfo_;
        } else {
          result.typedActorInfo_ = typedActorInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.ActorInfoProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.ActorInfoProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.ActorInfoProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          mergeUuid(other.getUuid());
        }
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasActorType()) {
          setActorType(other.getActorType());
        }
        if (other.hasTypedActorInfo()) {
          mergeTypedActorInfo(other.getTypedActorInfo());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasTarget()) {
          
          return false;
        }
        if (!hasTimeout()) {
          
          return false;
        }
        if (!hasActorType()) {
          
          return false;
        }
        if (!getUuid().isInitialized()) {
          
          return false;
        }
        if (hasTypedActorInfo()) {
          if (!getTypedActorInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasUuid()) {
                subBuilder.mergeFrom(getUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuid(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              target_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeout_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              akka.remote.protocol.RemoteProtocol.ActorType value = akka.remote.protocol.RemoteProtocol.ActorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                actorType_ = value;
              }
              break;
            }
            case 42: {
              akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder subBuilder = akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.newBuilder();
              if (hasTypedActorInfo()) {
                subBuilder.mergeFrom(getTypedActorInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTypedActorInfo(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              id_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol uuid = 1;
      private akka.remote.protocol.RemoteProtocol.UuidProtocol uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> uuidBuilder_;
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getUuid() {
        if (uuidBuilder_ == null) {
          return uuid_;
        } else {
          return uuidBuilder_.getMessage();
        }
      }
      public Builder setUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (uuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uuid_ = value;
          onChanged();
        } else {
          uuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUuid(
          akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        if (uuidBuilder_ == null) {
          uuid_ = builderForValue.build();
          onChanged();
        } else {
          uuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUuid(akka.remote.protocol.RemoteProtocol.UuidProtocol value) {
        if (uuidBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              uuid_ != akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
            uuid_ =
              akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
          } else {
            uuid_ = value;
          }
          onChanged();
        } else {
          uuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUuid() {
        if (uuidBuilder_ == null) {
          uuid_ = akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
          onChanged();
        } else {
          uuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder getUuidBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUuidFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder getUuidOrBuilder() {
        if (uuidBuilder_ != null) {
          return uuidBuilder_.getMessageOrBuilder();
        } else {
          return uuid_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder> 
          getUuidFieldBuilder() {
        if (uuidBuilder_ == null) {
          uuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.UuidProtocol, akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder, akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder>(
                  uuid_,
                  getParentForChildren(),
                  isClean());
          uuid_ = null;
        }
        return uuidBuilder_;
      }
      
      // required string target = 2;
      private java.lang.Object target_ = "";
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTarget(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        target_ = value;
        onChanged();
        return this;
      }
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      void setTarget(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        target_ = value;
        onChanged();
      }
      
      // required uint64 timeout = 3;
      private long timeout_ ;
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTimeout() {
        return timeout_;
      }
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000004;
        timeout_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeout_ = 0L;
        onChanged();
        return this;
      }
      
      // required .ActorType actorType = 4;
      private akka.remote.protocol.RemoteProtocol.ActorType actorType_ = akka.remote.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
      public boolean hasActorType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.remote.protocol.RemoteProtocol.ActorType getActorType() {
        return actorType_;
      }
      public Builder setActorType(akka.remote.protocol.RemoteProtocol.ActorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        actorType_ = value;
        onChanged();
        return this;
      }
      public Builder clearActorType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        actorType_ = akka.remote.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
        onChanged();
        return this;
      }
      
      // optional .TypedActorInfoProtocol typedActorInfo = 5;
      private akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol typedActorInfo_ = akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol, akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder, akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder> typedActorInfoBuilder_;
      public boolean hasTypedActorInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol getTypedActorInfo() {
        if (typedActorInfoBuilder_ == null) {
          return typedActorInfo_;
        } else {
          return typedActorInfoBuilder_.getMessage();
        }
      }
      public Builder setTypedActorInfo(akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol value) {
        if (typedActorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typedActorInfo_ = value;
          onChanged();
        } else {
          typedActorInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setTypedActorInfo(
          akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder builderForValue) {
        if (typedActorInfoBuilder_ == null) {
          typedActorInfo_ = builderForValue.build();
          onChanged();
        } else {
          typedActorInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeTypedActorInfo(akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol value) {
        if (typedActorInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              typedActorInfo_ != akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance()) {
            typedActorInfo_ =
              akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.newBuilder(typedActorInfo_).mergeFrom(value).buildPartial();
          } else {
            typedActorInfo_ = value;
          }
          onChanged();
        } else {
          typedActorInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearTypedActorInfo() {
        if (typedActorInfoBuilder_ == null) {
          typedActorInfo_ = akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
          onChanged();
        } else {
          typedActorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder getTypedActorInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTypedActorInfoFieldBuilder().getBuilder();
      }
      public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder getTypedActorInfoOrBuilder() {
        if (typedActorInfoBuilder_ != null) {
          return typedActorInfoBuilder_.getMessageOrBuilder();
        } else {
          return typedActorInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol, akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder, akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder> 
          getTypedActorInfoFieldBuilder() {
        if (typedActorInfoBuilder_ == null) {
          typedActorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol, akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder, akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder>(
                  typedActorInfo_,
                  getParentForChildren(),
                  isClean());
          typedActorInfo_ = null;
        }
        return typedActorInfoBuilder_;
      }
      
      // optional string id = 6;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        id_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:ActorInfoProtocol)
    }
    
    static {
      defaultInstance = new ActorInfoProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ActorInfoProtocol)
  }
  
  public interface TypedActorInfoProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string interface = 1;
    boolean hasInterface();
    String getInterface();
    
    // required string method = 2;
    boolean hasMethod();
    String getMethod();
  }
  public static final class TypedActorInfoProtocol extends
      com.google.protobuf.GeneratedMessage
      implements TypedActorInfoProtocolOrBuilder {
    // Use TypedActorInfoProtocol.newBuilder() to construct.
    private TypedActorInfoProtocol(Builder builder) {
      super(builder);
    }
    private TypedActorInfoProtocol(boolean noInit) {}
    
    private static final TypedActorInfoProtocol defaultInstance;
    public static TypedActorInfoProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public TypedActorInfoProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_TypedActorInfoProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_TypedActorInfoProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string interface = 1;
    public static final int INTERFACE_FIELD_NUMBER = 1;
    private java.lang.Object interface_;
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getInterface() {
      java.lang.Object ref = interface_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          interface_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInterfaceBytes() {
      java.lang.Object ref = interface_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        interface_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string method = 2;
    public static final int METHOD_FIELD_NUMBER = 2;
    private java.lang.Object method_;
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMethod() {
      java.lang.Object ref = method_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          method_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMethodBytes() {
      java.lang.Object ref = method_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        method_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      interface_ = "";
      method_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasInterface()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMethod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getInterfaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMethodBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getInterfaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMethodBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_TypedActorInfoProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_TypedActorInfoProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        interface_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        method_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol build() {
        akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol result = new akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.interface_ = interface_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.method_ = method_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance()) return this;
        if (other.hasInterface()) {
          setInterface(other.getInterface());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasInterface()) {
          
          return false;
        }
        if (!hasMethod()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              interface_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              method_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string interface = 1;
      private java.lang.Object interface_ = "";
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getInterface() {
        java.lang.Object ref = interface_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          interface_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInterface(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        interface_ = value;
        onChanged();
        return this;
      }
      public Builder clearInterface() {
        bitField0_ = (bitField0_ & ~0x00000001);
        interface_ = getDefaultInstance().getInterface();
        onChanged();
        return this;
      }
      void setInterface(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        interface_ = value;
        onChanged();
      }
      
      // required string method = 2;
      private java.lang.Object method_ = "";
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMethod() {
        java.lang.Object ref = method_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          method_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMethod(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        method_ = value;
        onChanged();
        return this;
      }
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000002);
        method_ = getDefaultInstance().getMethod();
        onChanged();
        return this;
      }
      void setMethod(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        method_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:TypedActorInfoProtocol)
    }
    
    static {
      defaultInstance = new TypedActorInfoProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TypedActorInfoProtocol)
  }
  
  public interface UuidProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 high = 1;
    boolean hasHigh();
    long getHigh();
    
    // required uint64 low = 2;
    boolean hasLow();
    long getLow();
  }
  public static final class UuidProtocol extends
      com.google.protobuf.GeneratedMessage
      implements UuidProtocolOrBuilder {
    // Use UuidProtocol.newBuilder() to construct.
    private UuidProtocol(Builder builder) {
      super(builder);
    }
    private UuidProtocol(boolean noInit) {}
    
    private static final UuidProtocol defaultInstance;
    public static UuidProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public UuidProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_UuidProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_UuidProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 high = 1;
    public static final int HIGH_FIELD_NUMBER = 1;
    private long high_;
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getHigh() {
      return high_;
    }
    
    // required uint64 low = 2;
    public static final int LOW_FIELD_NUMBER = 2;
    private long low_;
    public boolean hasLow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getLow() {
      return low_;
    }
    
    private void initFields() {
      high_ = 0L;
      low_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHigh()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, high_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, low_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, high_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, low_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.UuidProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.UuidProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_UuidProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_UuidProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.UuidProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        high_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        low_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.UuidProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.UuidProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.UuidProtocol build() {
        akka.remote.protocol.RemoteProtocol.UuidProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.UuidProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.UuidProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.UuidProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.UuidProtocol result = new akka.remote.protocol.RemoteProtocol.UuidProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.low_ = low_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.UuidProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.UuidProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.UuidProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) return this;
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHigh()) {
          
          return false;
        }
        if (!hasLow()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              high_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              low_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 high = 1;
      private long high_ ;
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getHigh() {
        return high_;
      }
      public Builder setHigh(long value) {
        bitField0_ |= 0x00000001;
        high_ = value;
        onChanged();
        return this;
      }
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000001);
        high_ = 0L;
        onChanged();
        return this;
      }
      
      // required uint64 low = 2;
      private long low_ ;
      public boolean hasLow() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getLow() {
        return low_;
      }
      public Builder setLow(long value) {
        bitField0_ |= 0x00000002;
        low_ = value;
        onChanged();
        return this;
      }
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000002);
        low_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:UuidProtocol)
    }
    
    static {
      defaultInstance = new UuidProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:UuidProtocol)
  }
  
  public interface MetadataEntryProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string key = 1;
    boolean hasKey();
    String getKey();
    
    // required bytes value = 2;
    boolean hasValue();
    com.google.protobuf.ByteString getValue();
  }
  public static final class MetadataEntryProtocol extends
      com.google.protobuf.GeneratedMessage
      implements MetadataEntryProtocolOrBuilder {
    // Use MetadataEntryProtocol.newBuilder() to construct.
    private MetadataEntryProtocol(Builder builder) {
      super(builder);
    }
    private MetadataEntryProtocol(boolean noInit) {}
    
    private static final MetadataEntryProtocol defaultInstance;
    public static MetadataEntryProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public MetadataEntryProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_MetadataEntryProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_MetadataEntryProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          key_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bytes value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }
    
    private void initFields() {
      key_ = "";
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, value_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_MetadataEntryProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_MetadataEntryProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol build() {
        akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol result = new akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              value_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string key = 1;
      private java.lang.Object key_ = "";
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      void setKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
      }
      
      // required bytes value = 2;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MetadataEntryProtocol)
    }
    
    static {
      defaultInstance = new MetadataEntryProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MetadataEntryProtocol)
  }
  
  public interface LifeCycleProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .LifeCycleType lifeCycle = 1;
    boolean hasLifeCycle();
    akka.remote.protocol.RemoteProtocol.LifeCycleType getLifeCycle();
  }
  public static final class LifeCycleProtocol extends
      com.google.protobuf.GeneratedMessage
      implements LifeCycleProtocolOrBuilder {
    // Use LifeCycleProtocol.newBuilder() to construct.
    private LifeCycleProtocol(Builder builder) {
      super(builder);
    }
    private LifeCycleProtocol(boolean noInit) {}
    
    private static final LifeCycleProtocol defaultInstance;
    public static LifeCycleProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public LifeCycleProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_LifeCycleProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_LifeCycleProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .LifeCycleType lifeCycle = 1;
    public static final int LIFECYCLE_FIELD_NUMBER = 1;
    private akka.remote.protocol.RemoteProtocol.LifeCycleType lifeCycle_;
    public boolean hasLifeCycle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.remote.protocol.RemoteProtocol.LifeCycleType getLifeCycle() {
      return lifeCycle_;
    }
    
    private void initFields() {
      lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLifeCycle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, lifeCycle_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, lifeCycle_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.LifeCycleProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_LifeCycleProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_LifeCycleProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.LifeCycleProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.LifeCycleProtocol build() {
        akka.remote.protocol.RemoteProtocol.LifeCycleProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.LifeCycleProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.LifeCycleProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.LifeCycleProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.LifeCycleProtocol result = new akka.remote.protocol.RemoteProtocol.LifeCycleProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lifeCycle_ = lifeCycle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.LifeCycleProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.LifeCycleProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.LifeCycleProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance()) return this;
        if (other.hasLifeCycle()) {
          setLifeCycle(other.getLifeCycle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLifeCycle()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              akka.remote.protocol.RemoteProtocol.LifeCycleType value = akka.remote.protocol.RemoteProtocol.LifeCycleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                lifeCycle_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .LifeCycleType lifeCycle = 1;
      private akka.remote.protocol.RemoteProtocol.LifeCycleType lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
      public boolean hasLifeCycle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.remote.protocol.RemoteProtocol.LifeCycleType getLifeCycle() {
        return lifeCycle_;
      }
      public Builder setLifeCycle(akka.remote.protocol.RemoteProtocol.LifeCycleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        lifeCycle_ = value;
        onChanged();
        return this;
      }
      public Builder clearLifeCycle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lifeCycle_ = akka.remote.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LifeCycleProtocol)
    }
    
    static {
      defaultInstance = new LifeCycleProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LifeCycleProtocol)
  }
  
  public interface AddressProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string hostname = 1;
    boolean hasHostname();
    String getHostname();
    
    // required uint32 port = 2;
    boolean hasPort();
    int getPort();
  }
  public static final class AddressProtocol extends
      com.google.protobuf.GeneratedMessage
      implements AddressProtocolOrBuilder {
    // Use AddressProtocol.newBuilder() to construct.
    private AddressProtocol(Builder builder) {
      super(builder);
    }
    private AddressProtocol(boolean noInit) {}
    
    private static final AddressProtocol defaultInstance;
    public static AddressProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddressProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_AddressProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_AddressProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string hostname = 1;
    public static final int HOSTNAME_FIELD_NUMBER = 1;
    private java.lang.Object hostname_;
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hostname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    private void initFields() {
      hostname_ = "";
      port_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHostname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.AddressProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.AddressProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_AddressProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_AddressProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.AddressProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hostname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.AddressProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.AddressProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.AddressProtocol build() {
        akka.remote.protocol.RemoteProtocol.AddressProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.AddressProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.AddressProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.AddressProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.AddressProtocol result = new akka.remote.protocol.RemoteProtocol.AddressProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hostname_ = hostname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.AddressProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.AddressProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.AddressProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance()) return this;
        if (other.hasHostname()) {
          setHostname(other.getHostname());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHostname()) {
          
          return false;
        }
        if (!hasPort()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hostname_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string hostname = 1;
      private java.lang.Object hostname_ = "";
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHostname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hostname_ = value;
        onChanged();
        return this;
      }
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      void setHostname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        hostname_ = value;
        onChanged();
      }
      
      // required uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AddressProtocol)
    }
    
    static {
      defaultInstance = new AddressProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AddressProtocol)
  }
  
  public interface ExceptionProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string classname = 1;
    boolean hasClassname();
    String getClassname();
    
    // required string message = 2;
    boolean hasMessage();
    String getMessage();
  }
  public static final class ExceptionProtocol extends
      com.google.protobuf.GeneratedMessage
      implements ExceptionProtocolOrBuilder {
    // Use ExceptionProtocol.newBuilder() to construct.
    private ExceptionProtocol(Builder builder) {
      super(builder);
    }
    private ExceptionProtocol(boolean noInit) {}
    
    private static final ExceptionProtocol defaultInstance;
    public static ExceptionProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExceptionProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ExceptionProtocol_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.protocol.RemoteProtocol.internal_static_ExceptionProtocol_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string classname = 1;
    public static final int CLASSNAME_FIELD_NUMBER = 1;
    private java.lang.Object classname_;
    public boolean hasClassname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getClassname() {
      java.lang.Object ref = classname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          classname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClassnameBytes() {
      java.lang.Object ref = classname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        classname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      classname_ = "";
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.remote.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.protocol.RemoteProtocol.ExceptionProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.protocol.RemoteProtocol.ExceptionProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ExceptionProtocol_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.protocol.RemoteProtocol.internal_static_ExceptionProtocol_fieldAccessorTable;
      }
      
      // Construct using akka.remote.protocol.RemoteProtocol.ExceptionProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        classname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDescriptor();
      }
      
      public akka.remote.protocol.RemoteProtocol.ExceptionProtocol getDefaultInstanceForType() {
        return akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
      }
      
      public akka.remote.protocol.RemoteProtocol.ExceptionProtocol build() {
        akka.remote.protocol.RemoteProtocol.ExceptionProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.remote.protocol.RemoteProtocol.ExceptionProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.remote.protocol.RemoteProtocol.ExceptionProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.remote.protocol.RemoteProtocol.ExceptionProtocol buildPartial() {
        akka.remote.protocol.RemoteProtocol.ExceptionProtocol result = new akka.remote.protocol.RemoteProtocol.ExceptionProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classname_ = classname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.remote.protocol.RemoteProtocol.ExceptionProtocol) {
          return mergeFrom((akka.remote.protocol.RemoteProtocol.ExceptionProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(akka.remote.protocol.RemoteProtocol.ExceptionProtocol other) {
        if (other == akka.remote.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance()) return this;
        if (other.hasClassname()) {
          setClassname(other.getClassname());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasClassname()) {
          
          return false;
        }
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              classname_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string classname = 1;
      private java.lang.Object classname_ = "";
      public boolean hasClassname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getClassname() {
        java.lang.Object ref = classname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          classname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        classname_ = value;
        onChanged();
        return this;
      }
      public Builder clearClassname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classname_ = getDefaultInstance().getClassname();
        onChanged();
        return this;
      }
      void setClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        classname_ = value;
        onChanged();
      }
      
      // required string message = 2;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:ExceptionProtocol)
    }
    
    static {
      defaultInstance = new ExceptionProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ExceptionProtocol)
  }
  
  public static final int BCREQ_FIELD_NUMBER = 1000;
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      akka.remote.protocol.RemoteProtocol.RemoteControlProtocol,
      akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol> bcreq = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.class,
        akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.getDefaultInstance());
  public static final int BCRESP_FIELD_NUMBER = 1001;
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      akka.remote.protocol.RemoteProtocol.RemoteControlProtocol,
      akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol> bcresp = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.class,
        akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.getDefaultInstance());
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AkkaRemoteProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AkkaRemoteProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteMessageProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RemoteMessageProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteControlProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RemoteControlProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ByteCodeRequestProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ByteCodeRequestProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ByteCodeResponseProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ByteCodeResponseProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteActorRefProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RemoteActorRefProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteTypedActorRefProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RemoteTypedActorRefProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SerializedActorRefProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SerializedActorRefProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SerializedTypedActorRefProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SerializedTypedActorRefProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MessageProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MessageProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ActorInfoProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ActorInfoProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TypedActorInfoProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TypedActorInfoProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UuidProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UuidProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MetadataEntryProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MetadataEntryProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LifeCycleProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LifeCycleProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AddressProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AddressProtocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ExceptionProtocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ExceptionProtocol_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024RemoteProtocol.proto\"\224\001\n\022AkkaRemotePro" +
      "tocol\022\'\n\007message\030\001 \001(\0132\026.RemoteMessagePr" +
      "otocol\022+\n\013instruction\030\002 \001(\0132\026.RemoteCont" +
      "rolProtocol\022(\n\010metadata\030\003 \003(\0132\026.Metadata" +
      "EntryProtocol\"\225\002\n\025RemoteMessageProtocol\022" +
      "\033\n\004uuid\030\001 \002(\0132\r.UuidProtocol\022%\n\tactorInf" +
      "o\030\002 \002(\0132\022.ActorInfoProtocol\022\016\n\006oneWay\030\003 " +
      "\002(\010\022!\n\007message\030\004 \001(\0132\020.MessageProtocol\022%" +
      "\n\texception\030\005 \001(\0132\022.ExceptionProtocol\022%\n" +
      "\016supervisorUuid\030\006 \001(\0132\r.UuidProtocol\022\'\n\006",
      "sender\030\007 \001(\0132\027.RemoteActorRefProtocol\022\016\n" +
      "\006cookie\030\010 \001(\t\"U\n\025RemoteControlProtocol\022\016" +
      "\n\006cookie\030\001 \001(\t\022!\n\013commandType\030\002 \002(\0162\014.Co" +
      "mmandType*\t\010\350\007\020\200\200\200\200\002\"D\n\027ByteCodeRequestP" +
      "rotocol\022\034\n\005rclId\030\001 \002(\0132\r.UuidProtocol\022\013\n" +
      "\003fqn\030\002 \002(\t\"\204\001\n\030ByteCodeResponseProtocol\022" +
      "\034\n\005rclId\030\001 \002(\0132\r.UuidProtocol\022\013\n\003fqn\030\002 \002" +
      "(\t\022+\n\014responseCode\030\003 \002(\0162\025.ByteCodeRespo" +
      "nseCode\022\020\n\010bytecode\030\004 \001(\014\"\204\001\n\026RemoteActo" +
      "rRefProtocol\022\032\n\022classOrServiceName\030\001 \002(\t",
      "\022\026\n\016actorClassname\030\002 \002(\t\022%\n\013homeAddress\030" +
      "\003 \002(\0132\020.AddressProtocol\022\017\n\007timeout\030\004 \001(\004" +
      "\"_\n\033RemoteTypedActorRefProtocol\022)\n\010actor" +
      "Ref\030\001 \002(\0132\027.RemoteActorRefProtocol\022\025\n\rin" +
      "terfaceName\030\002 \002(\t\"\371\002\n\032SerializedActorRef" +
      "Protocol\022\033\n\004uuid\030\001 \002(\0132\r.UuidProtocol\022\n\n" +
      "\002id\030\002 \002(\t\022\026\n\016actorClassname\030\003 \002(\t\022)\n\017ori" +
      "ginalAddress\030\004 \002(\0132\020.AddressProtocol\022\025\n\r" +
      "actorInstance\030\005 \001(\014\022\033\n\023serializerClassna" +
      "me\030\006 \001(\t\022\017\n\007timeout\030\007 \001(\004\022\026\n\016receiveTime",
      "out\030\010 \001(\004\022%\n\tlifeCycle\030\t \001(\0132\022.LifeCycle" +
      "Protocol\022+\n\nsupervisor\030\n \001(\0132\027.RemoteAct" +
      "orRefProtocol\022\024\n\014hotswapStack\030\013 \001(\014\022(\n\010m" +
      "essages\030\014 \003(\0132\026.RemoteMessageProtocol\"g\n" +
      "\037SerializedTypedActorRefProtocol\022-\n\010acto" +
      "rRef\030\001 \002(\0132\033.SerializedActorRefProtocol\022" +
      "\025\n\rinterfaceName\030\002 \002(\t\"\220\001\n\017MessageProtoc" +
      "ol\0225\n\023serializationScheme\030\001 \002(\0162\030.Serial" +
      "izationSchemeType\022\017\n\007message\030\002 \002(\014\022\027\n\017me" +
      "ssageManifest\030\003 \001(\014\022\034\n\005rclId\030\004 \001(\0132\r.Uui",
      "dProtocol\"\255\001\n\021ActorInfoProtocol\022\033\n\004uuid\030" +
      "\001 \002(\0132\r.UuidProtocol\022\016\n\006target\030\002 \002(\t\022\017\n\007" +
      "timeout\030\003 \002(\004\022\035\n\tactorType\030\004 \002(\0162\n.Actor" +
      "Type\022/\n\016typedActorInfo\030\005 \001(\0132\027.TypedActo" +
      "rInfoProtocol\022\n\n\002id\030\006 \001(\t\";\n\026TypedActorI" +
      "nfoProtocol\022\021\n\tinterface\030\001 \002(\t\022\016\n\006method" +
      "\030\002 \002(\t\")\n\014UuidProtocol\022\014\n\004high\030\001 \002(\004\022\013\n\003" +
      "low\030\002 \002(\004\"3\n\025MetadataEntryProtocol\022\013\n\003ke" +
      "y\030\001 \002(\t\022\r\n\005value\030\002 \002(\014\"6\n\021LifeCycleProto" +
      "col\022!\n\tlifeCycle\030\001 \002(\0162\016.LifeCycleType\"1",
      "\n\017AddressProtocol\022\020\n\010hostname\030\001 \002(\t\022\014\n\004p" +
      "ort\030\002 \002(\r\"7\n\021ExceptionProtocol\022\021\n\tclassn" +
      "ame\030\001 \002(\t\022\017\n\007message\030\002 \002(\t*W\n\024ByteCodeRe" +
      "sponseCode\022\006\n\002OK\020\001\022\032\n\026ENDPOINT_NOT_AVAIL" +
      "ABLE\020\002\022\033\n\027BYTE_CODE_NOT_AVAILABLE\020\003*J\n\013C" +
      "ommandType\022\014\n\010SHUTDOWN\020\001\022\025\n\021BYTE_CODE_RE" +
      "QUEST\020\002\022\026\n\022BYTE_CODE_RESPONSE\020\003*=\n\tActor" +
      "Type\022\017\n\013SCALA_ACTOR\020\001\022\016\n\nJAVA_ACTOR\020\002\022\017\n" +
      "\013TYPED_ACTOR\020\003*]\n\027SerializationSchemeTyp" +
      "e\022\010\n\004JAVA\020\001\022\013\n\007SBINARY\020\002\022\016\n\nSCALA_JSON\020\003",
      "\022\r\n\tJAVA_JSON\020\004\022\014\n\010PROTOBUF\020\005*-\n\rLifeCyc" +
      "leType\022\r\n\tPERMANENT\020\001\022\r\n\tTEMPORARY\020\002:@\n\005" +
      "bcreq\022\026.RemoteControlProtocol\030\350\007 \001(\0132\030.B" +
      "yteCodeRequestProtocol:B\n\006bcresp\022\026.Remot" +
      "eControlProtocol\030\351\007 \001(\0132\031.ByteCodeRespon" +
      "seProtocolB\030\n\024akka.remote.protocolH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_AkkaRemoteProtocol_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_AkkaRemoteProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AkkaRemoteProtocol_descriptor,
              new java.lang.String[] { "Message", "Instruction", "Metadata", },
              akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol.class,
              akka.remote.protocol.RemoteProtocol.AkkaRemoteProtocol.Builder.class);
          internal_static_RemoteMessageProtocol_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_RemoteMessageProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RemoteMessageProtocol_descriptor,
              new java.lang.String[] { "Uuid", "ActorInfo", "OneWay", "Message", "Exception", "SupervisorUuid", "Sender", "Cookie", },
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.class,
              akka.remote.protocol.RemoteProtocol.RemoteMessageProtocol.Builder.class);
          internal_static_RemoteControlProtocol_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_RemoteControlProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RemoteControlProtocol_descriptor,
              new java.lang.String[] { "Cookie", "CommandType", },
              akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.class,
              akka.remote.protocol.RemoteProtocol.RemoteControlProtocol.Builder.class);
          internal_static_ByteCodeRequestProtocol_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_ByteCodeRequestProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ByteCodeRequestProtocol_descriptor,
              new java.lang.String[] { "RclId", "Fqn", },
              akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.class,
              akka.remote.protocol.RemoteProtocol.ByteCodeRequestProtocol.Builder.class);
          internal_static_ByteCodeResponseProtocol_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_ByteCodeResponseProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ByteCodeResponseProtocol_descriptor,
              new java.lang.String[] { "RclId", "Fqn", "ResponseCode", "Bytecode", },
              akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.class,
              akka.remote.protocol.RemoteProtocol.ByteCodeResponseProtocol.Builder.class);
          internal_static_RemoteActorRefProtocol_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_RemoteActorRefProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RemoteActorRefProtocol_descriptor,
              new java.lang.String[] { "ClassOrServiceName", "ActorClassname", "HomeAddress", "Timeout", },
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.class,
              akka.remote.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder.class);
          internal_static_RemoteTypedActorRefProtocol_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_RemoteTypedActorRefProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RemoteTypedActorRefProtocol_descriptor,
              new java.lang.String[] { "ActorRef", "InterfaceName", },
              akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.class,
              akka.remote.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.Builder.class);
          internal_static_SerializedActorRefProtocol_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_SerializedActorRefProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SerializedActorRefProtocol_descriptor,
              new java.lang.String[] { "Uuid", "Id", "ActorClassname", "OriginalAddress", "ActorInstance", "SerializerClassname", "Timeout", "ReceiveTimeout", "LifeCycle", "Supervisor", "HotswapStack", "Messages", },
              akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.class,
              akka.remote.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder.class);
          internal_static_SerializedTypedActorRefProtocol_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_SerializedTypedActorRefProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SerializedTypedActorRefProtocol_descriptor,
              new java.lang.String[] { "ActorRef", "InterfaceName", },
              akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.class,
              akka.remote.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.Builder.class);
          internal_static_MessageProtocol_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_MessageProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MessageProtocol_descriptor,
              new java.lang.String[] { "SerializationScheme", "Message", "MessageManifest", "RclId", },
              akka.remote.protocol.RemoteProtocol.MessageProtocol.class,
              akka.remote.protocol.RemoteProtocol.MessageProtocol.Builder.class);
          internal_static_ActorInfoProtocol_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_ActorInfoProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ActorInfoProtocol_descriptor,
              new java.lang.String[] { "Uuid", "Target", "Timeout", "ActorType", "TypedActorInfo", "Id", },
              akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.class,
              akka.remote.protocol.RemoteProtocol.ActorInfoProtocol.Builder.class);
          internal_static_TypedActorInfoProtocol_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_TypedActorInfoProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TypedActorInfoProtocol_descriptor,
              new java.lang.String[] { "Interface", "Method", },
              akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.class,
              akka.remote.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder.class);
          internal_static_UuidProtocol_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_UuidProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UuidProtocol_descriptor,
              new java.lang.String[] { "High", "Low", },
              akka.remote.protocol.RemoteProtocol.UuidProtocol.class,
              akka.remote.protocol.RemoteProtocol.UuidProtocol.Builder.class);
          internal_static_MetadataEntryProtocol_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_MetadataEntryProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MetadataEntryProtocol_descriptor,
              new java.lang.String[] { "Key", "Value", },
              akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.class,
              akka.remote.protocol.RemoteProtocol.MetadataEntryProtocol.Builder.class);
          internal_static_LifeCycleProtocol_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_LifeCycleProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LifeCycleProtocol_descriptor,
              new java.lang.String[] { "LifeCycle", },
              akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.class,
              akka.remote.protocol.RemoteProtocol.LifeCycleProtocol.Builder.class);
          internal_static_AddressProtocol_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_AddressProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AddressProtocol_descriptor,
              new java.lang.String[] { "Hostname", "Port", },
              akka.remote.protocol.RemoteProtocol.AddressProtocol.class,
              akka.remote.protocol.RemoteProtocol.AddressProtocol.Builder.class);
          internal_static_ExceptionProtocol_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_ExceptionProtocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ExceptionProtocol_descriptor,
              new java.lang.String[] { "Classname", "Message", },
              akka.remote.protocol.RemoteProtocol.ExceptionProtocol.class,
              akka.remote.protocol.RemoteProtocol.ExceptionProtocol.Builder.class);
          bcreq.internalInit(descriptor.getExtensions().get(0));
          bcresp.internalInit(descriptor.getExtensions().get(1));
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
